generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  firstName String
  lastName  String
  password  String
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
  shares    Share[]
  groups    Group[]   @relation("UserGroups")
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expenses  Expense[]
  members   User[]    @relation("UserGroups")
}

model Expense {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  amount      Float
  categoryId  Int?
  note        String?
  date        DateTime         @default(now())
  groupId     Int
  userId      Int
  category    ExpenseCategory? @relation(fields: [categoryId], references: [id])
  group       Group            @relation(fields: [groupId], references: [id])
  user        User             @relation(fields: [userId], references: [id])
  shares      Share[]

  @@index([groupId])
  @@index([userId])
}

model ExpenseCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  icon     String
  expenses Expense[]
}

model Share {
  id        Int     @id @default(autoincrement())
  userId    Int
  expenseId Int
  amount    Float
  expense   Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, expenseId])
}
