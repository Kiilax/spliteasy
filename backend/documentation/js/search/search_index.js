var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddUsersDto.html",[0,0.164,1,2.466]],["body/classes/AddUsersDto.html",[0,0.295,1,4.107,2,1.312,3,0.294,4,0.26,5,0.26,6,5.11,7,4.173,8,0.401,9,1.521,10,4.07,11,0.738,12,0.021,13,1.936,14,1.312,15,4.884,16,2.507,17,0.558,18,4.884,19,0.584,20,4.107,21,3.765,22,1.724,23,2.468,24,0.294,25,3.354,26,0.017,27,0.017]],["title/controllers/AppController.html",[28,1.341,29,2.724]],["body/controllers/AppController.html",[0,0.226,3,0.297,4,0.263,5,0.263,8,0.406,12,0.021,14,1.328,17,0.565,19,0.589,24,0.297,26,0.017,27,0.017,28,2.251,29,4.571,30,1.956,31,4.226,32,2.013,33,5.782,34,4.947,35,1.652,36,1.158,37,1.065,38,3.783,39,4.226,40,2.343,41,3.397,42,1.652,43,4.947]],["title/modules/AppModule.html",[44,1.199,45,2.466]],["body/modules/AppModule.html",[0,0.17,3,0.224,4,0.198,5,0.198,12,0.021,16,2.107,19,0.681,24,0.224,26,0.014,27,0.014,37,0.803,38,3.81,39,3.186,44,1.9,45,5.001,46,1.66,47,1.66,48,1.885,49,1.885,50,1.66,51,2.874,52,1.885,53,3.186,54,3.186,55,3.186,56,4.122,57,3.81,58,4.122,59,3.81,60,2.914,61,3.309,62,2.541,63,1.885,64,1.766,65,3.729,66,2.925,67,2.828,68,3.186,69,2.828,70,3.729,71,3.186,72,3.729,73,3.729,74,1.766,75,2.018,76,3.186,77,5.028,78,3.729,79,3.729,80,3.729,81,3.729,82,3.729]],["title/injectables/AppService.html",[38,2.09,83,1.075]],["body/injectables/AppService.html",[0,0.232,3,0.306,4,0.271,5,0.271,8,0.418,12,0.021,17,0.582,19,0.497,24,0.306,26,0.018,27,0.018,32,2.049,33,5.839,35,1.701,36,1.178,37,1.097,38,3.57,42,1.701,83,1.837,84,2.574,85,4.351,86,5.093,87,5.093,88,5.093,89,5.093,90,5.093]],["title/controllers/AuthController.html",[28,1.341,91,2.466]],["body/controllers/AuthController.html",[0,0.175,3,0.23,4,0.204,5,0.204,8,0.314,11,0.659,12,0.021,14,1.548,17,0.659,19,0.626,24,0.23,26,0.015,27,0.015,28,1.43,30,1.515,32,1.71,35,1.926,37,0.825,40,1.814,42,1.926,91,3.516,92,3.273,93,2.411,94,3.831,95,4.374,96,4.374,97,4.374,98,3.831,99,3.581,100,3.831,101,3.831,102,1.926,103,1.388,104,1.466,105,6.155,106,3.831,107,3.581,108,3.831,109,3.831,110,3.273,111,4.154,112,3.831,113,3.831,114,2.411,115,2.411,116,2.631,117,3.831,118,3.355,119,3.273,120,4.668,121,3.831,122,4.374,123,3.273,124,3.273,125,3.831,126,5.12,127,3.831,128,3.831,129,3.831,130,3.831,131,3.831,132,3.831,133,3.831,134,3.831,135,3.831,136,3.831]],["title/guards/AuthGuard.html",[137,2.724,138,2.466]],["body/guards/AuthGuard.html",[0,0.145,3,0.191,4,0.168,5,0.168,8,0.26,11,0.685,12,0.022,16,1.884,17,0.596,19,0.625,24,0.191,26,0.013,27,0.013,32,1.501,35,1.501,36,0.863,37,0.683,42,1.744,83,1.346,102,1.744,103,1.257,104,1.327,138,3.086,139,2.405,140,2.709,141,2.638,142,4.852,143,3.92,144,4.494,145,2,146,3.171,147,4.723,148,4.46,149,2.69,150,5.471,151,3.171,152,3.84,153,4.307,154,3.171,155,2.709,156,2.129,157,4.494,158,4.723,159,3.171,160,3.959,161,2.405,162,1.845,163,2.405,164,2.177,165,2.405,166,3.171,167,2.405,168,2.271,169,1.845,170,1.996,171,1.996,172,2.405,173,3.147,174,3.84,175,3.171,176,2.709,177,3.171,178,2.709,179,4.723,180,3.171,181,2.825,182,2.064,183,3.171,184,2.709,185,2.405,186,3.086,187,2.432,188,3.171,189,2.405,190,2.709,191,1.678,192,3.171,193,2.709,194,1.996,195,2.405,196,2.405,197,2.405,198,3.171,199,3.171]],["title/modules/AuthModule.html",[44,1.199,56,2.261]],["body/modules/AuthModule.html",[0,0.174,3,0.23,4,0.203,5,0.203,12,0.022,16,1.602,19,0.677,24,0.23,26,0.015,27,0.015,30,2.021,37,0.823,44,1.923,46,1.701,47,1.701,48,1.931,49,1.931,50,1.701,51,2.91,52,1.931,56,4.407,60,2.935,61,3.333,62,2.583,63,1.931,64,1.81,66,2.974,68,4.367,69,2.898,91,3.955,118,3.837,119,3.265,138,3.51,162,2.223,164,2.624,189,2.898,200,3.265,201,3.821,202,3.265,203,3.821,204,3.821,205,3.265,206,3.265,207,3.821,208,5.111,209,2.898,210,6.149,211,3.821,212,3.821,213,3.821,214,3.821,215,3.821,216,3.821,217,3.821,218,3.821,219,3.265,220,3.821,221,3.821]],["title/classes/AuthResponseDto.html",[0,0.164,222,2.466]],["body/classes/AuthResponseDto.html",[0,0.242,2,1.424,3,0.319,4,0.282,5,0.282,8,0.435,9,1.598,11,0.606,12,0.02,17,0.606,24,0.319,26,0.018,27,0.018,36,1.207,222,4.316,223,5.37,224,4.022,225,5.723,226,4.531]],["title/injectables/AuthService.html",[83,1.075,118,2.09]],["body/injectables/AuthService.html",[0,0.13,3,0.171,4,0.151,5,0.151,8,0.233,11,0.616,12,0.022,17,0.616,19,0.62,24,0.171,26,0.012,27,0.012,32,1.386,35,1.639,37,0.611,42,1.639,83,1.243,84,1.435,95,3.546,96,3.546,97,3.546,99,3.14,102,1.803,103,1.299,104,1.372,107,3.14,110,3.546,111,3.614,118,2.415,122,3.546,123,2.425,124,2.425,141,3.274,143,2.613,145,1.847,147,4.698,149,2.841,156,2.841,161,2.153,162,1.652,167,2.153,173,3.209,181,2.92,182,2.134,186,3.369,187,3.562,191,2.313,193,3.546,197,3.148,222,1.949,225,4.191,227,2.425,228,2.839,229,2.839,230,4.15,231,2.839,232,2.613,233,4.15,234,2.839,235,2.839,236,2.839,237,3.148,238,2.839,239,2.425,240,3.148,241,4.15,242,4.15,243,4.15,244,3.546,245,4.15,246,2.402,247,4.906,248,3.148,249,4.906,250,2.839,251,2.839,252,2.425,253,4.15,254,2.839,255,4.15,256,2.839,257,3.148,258,3.546,259,1.263,260,2.839,261,2.839,262,2.839,263,2.839]],["title/classes/CreateExpenseCategoryDto.html",[0,0.164,264,2.261]],["body/classes/CreateExpenseCategoryDto.html",[0,0.27,2,1.291,3,0.289,4,0.255,5,0.255,8,0.394,9,1.506,11,0.677,12,0.021,14,1.591,17,0.677,19,0.47,22,1.697,24,0.289,26,0.017,27,0.017,36,1.287,74,3.041,103,1.545,264,3.729,265,3.245,266,5.485,267,3.646,268,4.869,269,2.885,270,4.808,271,4.808]],["title/classes/CreateExpenseDto.html",[0,0.164,272,2.261]],["body/classes/CreateExpenseDto.html",[0,0.248,2,0.915,3,0.205,4,0.181,5,0.181,8,0.28,9,1.202,11,0.797,12,0.021,13,1.995,14,1.817,16,1.429,17,0.773,19,0.53,20,3.247,21,4.011,22,1.203,23,1.722,24,0.205,25,2.341,26,0.014,27,0.014,36,1.224,103,1.307,104,1.62,269,2.581,272,2.976,273,5.851,274,2.585,275,2.937,276,4.117,277,3.708,278,3.417,279,3.417,280,3.728,281,4.117,282,2.937,283,4.117,284,3.409,285,2.912,286,3.409,287,3.409,288,3.409,289,4.039,290,3.409,291,2.912,292,3.409,293,3.409,294,3.69,295,3.409,296,2.912,297,3.409,298,3.409,299,4.026,300,4.039,301,4.039,302,4.728,303,1.983,304,2.912]],["title/classes/CreateGroupDto.html",[0,0.164,305,2.261]],["body/classes/CreateGroupDto.html",[0,0.28,2,1.368,3,0.306,4,0.271,5,0.271,8,0.418,9,1.56,11,0.582,12,0.021,14,1.368,17,0.582,19,0.497,22,1.798,24,0.306,26,0.018,27,0.018,36,1.178,103,1.585,269,2.572,305,3.862,306,5.242,307,3.863,308,4.351,309,5.093,310,2.756,311,3.206]],["title/classes/CreateUserDto.html",[0,0.164,312,2.466]],["body/classes/CreateUserDto.html",[0,0.271,2,1.088,3,0.243,4,0.215,5,0.215,8,0.332,9,1.351,11,0.746,12,0.021,14,1.754,17,0.746,19,0.579,22,1.43,23,2.048,24,0.243,26,0.015,27,0.015,36,1.359,246,2.638,259,2.638,269,2.738,310,2.192,311,3.344,312,3.649,313,5.728,314,3.073,315,3.449,316,3.449,317,3.207,318,4.052,319,4.052,320,4.539,321,4.052,322,3.462,323,3.073,324,4.052,325,4.052,326,4.052,327,2.551,328,3.344,329,4.604,330,3.073,331,4.052,332,5.313,333,2.551]],["title/controllers/ExpenseCategoriesController.html",[28,1.341,334,2.466]],["body/controllers/ExpenseCategoriesController.html",[0,0.139,3,0.183,4,0.162,5,0.162,8,0.249,11,0.674,12,0.021,13,1.973,14,1.649,17,0.701,19,0.544,24,0.183,26,0.012,27,0.012,28,1.135,30,1.202,32,1.457,35,2.051,36,0.979,37,0.655,40,1.44,41,2.087,42,2.051,74,2.415,75,3.422,93,1.914,102,1.971,103,1.522,104,1.5,114,2.745,115,2.745,116,2.087,156,3.239,264,4.147,265,3.196,334,2.995,335,2.597,336,4.361,337,2.995,338,2.995,339,4.76,340,3.307,341,3.726,342,2.995,343,2.597,344,2.597,345,3.04,346,2.597,347,3.04,348,3.04,349,2.293,350,3.04,351,3.04,352,2.597,353,2.597,354,3.04,355,2.597,356,3.04,357,3.04,358,2.597,359,3.508,360,3.04,361,3.04,362,1.769,363,2.087,364,4.226,365,1.914,366,1.645,367,2.597,368,2.305,369,1.536,370,2.759,371,2.305,372,3.04,373,2.597,374,3.04,375,3.04,376,4.226,377,3.04,378,2.087,379,3.04,380,3.04,381,2.305,382,3.04,383,3.04,384,2.597,385,2.305,386,3.04,387,3.04,388,3.04,389,3.04,390,3.04]],["title/modules/ExpenseCategoriesModule.html",[44,1.199,57,2.09]],["body/modules/ExpenseCategoriesModule.html",[0,0.197,3,0.259,4,0.229,5,0.229,12,0.021,19,0.629,24,0.259,26,0.016,27,0.016,30,2.187,37,0.928,44,2.04,46,2.462,47,1.919,48,2.179,49,2.179,50,1.919,51,3.086,52,3.086,57,4.127,60,3.034,62,2.795,63,2.179,64,2.042,66,3.219,67,3.27,74,2.62,75,2.333,265,2.179,334,4.194,370,3.935,371,3.27,391,3.684,392,4.312,393,3.684,394,3.684,395,4.312,396,4.312,397,4.312,398,3.684]],["title/injectables/ExpenseCategoriesService.html",[83,1.075,370,1.943]],["body/injectables/ExpenseCategoriesService.html",[0,0.122,3,0.161,4,0.142,5,0.142,8,0.219,11,0.67,12,0.022,13,1.909,17,0.694,19,0.512,24,0.161,26,0.011,27,0.011,32,1.326,35,1.96,36,0.909,37,0.575,40,1.265,42,1.871,74,1.265,75,3.377,83,1.188,84,1.35,102,1.96,103,1.562,104,1.492,141,3.528,145,1.189,156,3.157,173,2.649,181,2.562,182,1.872,187,3.377,194,2.981,232,2.499,264,3.929,265,3.154,268,3.01,337,2.726,338,2.726,339,4.478,340,3.01,341,3.391,342,2.726,343,3.391,346,3.391,349,2.538,352,3.391,355,3.391,358,3.391,359,2.981,366,1.446,367,2.283,368,2.026,369,1.35,370,2.147,399,2.283,400,2.026,401,2.779,402,2.672,403,2.672,404,2.672,405,2.672,406,2.672,407,2.672,408,2.672,409,1.835,410,2.283,411,2.672,412,2.672,413,2.672,414,2.672,415,4.785,416,4.736,417,4.046,418,2.672,419,5.242,420,2.672,421,2.672,422,2.672,423,2.672]],["title/controllers/ExpensesController.html",[28,1.341,424,2.466]],["body/controllers/ExpensesController.html",[0,0.108,3,0.143,4,0.126,5,0.126,8,0.195,11,0.641,12,0.021,13,2.008,14,1.506,17,0.641,19,0.588,24,0.143,26,0.01,27,0.01,28,0.886,30,0.938,32,1.212,35,1.874,37,0.511,40,1.124,41,1.629,42,1.874,74,2.657,93,1.493,102,1.874,103,1.35,104,1.426,114,2.774,115,3.107,141,3.465,156,3.076,168,3.485,169,2.112,170,1.493,171,1.493,182,0.938,191,2.455,272,3.79,275,2.671,279,3.107,282,2.384,337,2.492,338,2.492,342,3.026,349,2.455,362,2.564,363,1.629,364,4.254,365,2.284,366,1.284,369,1.199,378,2.492,381,2.752,384,3.1,424,2.492,425,2.027,426,3.026,427,3.1,428,3.1,429,3.1,430,2.373,431,4.134,432,4.008,433,2.373,434,2.752,435,2.112,436,2.373,437,2.373,438,2.373,439,2.373,440,2.373,441,3.629,442,2.373,443,2.373,444,3.629,445,2.373,446,2.373,447,3.79,448,2.373,449,2.373,450,2.112,451,2.027,452,3.1,453,1.38,454,2.284,455,2.027,456,1.799,457,2.027,458,2.027,459,2.373,460,2.373,461,4.407,462,2.373,463,2.373,464,3.765,465,2.373,466,1.493,467,2.373,468,3.629,469,2.373,470,2.373,471,1.284,472,2.373,473,2.373,474,2.373,475,2.373,476,2.373,477,2.027,478,2.373,479,1.493,480,2.373,481,2.373,482,2.373]],["title/modules/ExpensesModule.html",[44,1.199,58,2.261]],["body/modules/ExpensesModule.html",[0,0.186,3,0.245,4,0.216,5,0.216,12,0.021,19,0.668,24,0.245,26,0.015,27,0.015,30,2.108,37,0.877,44,1.985,46,1.813,47,1.813,48,2.058,49,2.058,50,1.813,51,3.003,52,2.058,57,3.906,58,4.565,59,3.906,60,2.988,61,3.393,62,2.694,63,2.058,64,1.929,66,3.102,67,3.089,71,3.48,75,2.204,76,3.48,265,2.058,424,4.081,450,3.906,451,3.48,483,3.48,484,3.48,485,4.073,486,4.073,487,4.073,488,4.073]],["title/injectables/ExpensesService.html",[83,1.075,450,2.09]],["body/injectables/ExpensesService.html",[0,0.057,3,0.075,4,0.066,5,0.066,8,0.102,10,2.786,11,0.534,12,0.022,13,2.075,16,2.127,17,0.534,19,0.457,24,0.075,26,0.006,27,0.006,32,0.716,35,1.478,37,0.268,42,1.695,74,2.757,75,0.673,83,0.641,84,0.629,102,1.561,103,1.221,104,1.189,141,3.024,143,2.601,145,0.954,156,1.588,160,0.943,169,0.724,173,3.024,181,3.196,182,2.335,187,3.099,191,0.465,194,2.601,232,1.349,240,1.625,265,0.629,272,2.786,275,3.404,276,0.943,277,0.724,278,1.349,279,2.943,280,0.854,281,4.643,282,3.376,303,2.2,337,1.471,338,1.471,342,1.471,349,2.384,366,0.673,368,1.625,369,0.629,370,2.395,371,0.943,400,0.943,401,1.957,409,0.854,410,1.063,415,3.23,417,1.063,426,2.597,427,1.83,428,1.83,429,1.83,431,3.696,432,3.485,434,1.625,435,0.724,447,2.786,450,1.247,452,1.83,453,0.724,457,1.063,458,1.063,466,1.349,471,3.15,489,1.063,490,2.143,491,2.529,492,1.244,493,2.143,494,4.132,495,1.244,496,2.143,497,1.244,498,2.14,499,2.143,500,1.244,501,2.143,502,1.244,503,2.143,504,1.244,505,2.143,506,1.244,507,2.143,508,1.244,509,0.943,510,1.244,511,1.244,512,1.244,513,1.244,514,1.244,515,0.783,516,2.143,517,3.354,518,1.83,519,2.143,520,1.244,521,1.244,522,2.143,523,4.889,524,5.382,525,2.143,526,1.244,527,1.244,528,3.354,529,2.143,530,1.063,531,2.411,532,2.143,533,2.143,534,3.354,535,2.822,536,2.822,537,3.134,538,2.143,539,2.143,540,2.143,541,1.244,542,1.244,543,1.244,544,1.244,545,1.244,546,1.244,547,1.244,548,1.244,549,1.244,550,4.132,551,4.475,552,2.822,553,2.822,554,2.865,555,2.822,556,2.411,557,2.14,558,2.143,559,2.143,560,1.244,561,1.063,562,1.244,563,1.244,564,1.244,565,2.143,566,1.244,567,1.244,568,2.143,569,1.244,570,1.244,571,1.244,572,2.143,573,2.143,574,1.244,575,1.244,576,1.244,577,1.244,578,1.244,579,1.244,580,2.143,581,1.244,582,2.822,583,1.244,584,1.244,585,1.063,586,2.143,587,1.244,588,2.143,589,1.244,590,1.244,591,1.244,592,1.244,593,1.244,594,2.822,595,0.943,596,2.143,597,1.063,598,1.244]],["title/classes/GetUserResponseDto.html",[0,0.164,599,2.466]],["body/classes/GetUserResponseDto.html",[0,0.196,2,1.155,3,0.258,4,0.228,5,0.228,8,0.353,9,1.404,11,0.791,12,0.021,13,1.653,17,0.791,24,0.258,26,0.016,27,0.016,36,1.348,191,2.62,224,3.261,226,3.673,246,2.715,259,2.715,277,3.745,315,3.549,316,3.549,349,2.278,599,3.792,600,5.995,601,4.189,602,4.189,603,4.3,604,4.3,605,4.3,606,4.3,607,4.3,608,4.3]],["title/classes/Group.html",[0,0.164,471,1.943]],["body/classes/Group.html",[0,0.182,2,1.068,3,0.239,4,0.211,5,0.211,8,0.326,9,1.335,10,4.282,11,0.777,12,0.021,13,2.174,17,0.777,24,0.239,26,0.015,27,0.015,36,1.247,102,1.329,103,1.662,104,1.012,145,1.771,182,2.076,277,3.881,349,2.425,426,4.671,471,2.84,601,4.035,602,4.035,609,3.399,610,3.981,611,5.25,612,3.979,613,3.979,614,3.979,615,3.979,616,3.979,617,3.017,618,3.979,619,3.979,620,3.979,621,3.399,622,3.399]],["title/controllers/GroupsController.html",[28,1.341,623,2.466]],["body/controllers/GroupsController.html",[0,0.101,1,3.267,3,0.133,4,0.118,5,0.118,8,0.182,11,0.69,12,0.021,13,2.115,14,1.623,17,0.69,19,0.556,24,0.133,26,0.01,27,0.01,28,0.826,30,0.875,32,1.149,35,2.064,36,0.81,37,0.476,40,1.048,42,2.019,93,1.393,102,2.019,103,1.455,104,1.537,114,2.995,115,2.165,116,1.52,168,3.58,169,1.288,170,1.393,171,1.393,179,3.608,186,2.897,191,2.531,279,2.995,282,3.184,305,3.705,344,1.891,349,2.61,353,1.891,362,1.288,363,1.52,364,4.686,365,1.393,366,1.197,373,2.938,376,3.199,378,1.52,381,1.678,385,3.608,453,1.288,454,1.393,455,1.891,456,1.678,464,4.863,466,2.165,471,1.197,477,2.938,479,2.165,491,1.861,561,1.891,623,2.362,624,1.891,625,3.439,626,3.439,627,3.439,628,2.938,629,2.938,630,3.439,631,3.439,632,2.213,633,2.213,634,2.213,635,2.213,636,2.213,637,2.213,638,2.213,639,2.213,640,2.213,641,2.213,642,2.213,643,2.213,644,2.213,645,2.213,646,2.213,647,2.213,648,2.213,649,2.213,650,2.213,651,2.213,652,2.213,653,2.213,654,2.213,655,3.705,656,2.213,657,2.213,658,1.891,659,2.938,660,2.213,661,2.213,662,2.213,663,2.213,664,1.891,665,2.213,666,2.213,667,1.891,668,2.213,669,2.213,670,2.213,671,2.213,672,2.213,673,2.213,674,2.213,675,2.213,676,2.213,677,2.213,678,2.213,679,2.213,680,2.213,681,2.213,682,2.213,683,2.213,684,2.213,685,2.213,686,2.213,687,2.213,688,2.213,689,2.213,690,3.439,691,2.213,692,2.213,693,1.891]],["title/modules/GroupsModule.html",[44,1.199,59,2.09]],["body/modules/GroupsModule.html",[0,0.191,3,0.252,4,0.223,5,0.223,12,0.021,19,0.661,24,0.252,26,0.016,27,0.016,30,2.149,37,0.903,44,2.013,46,1.867,47,1.867,48,2.12,49,2.12,50,1.867,51,3.046,52,3.046,59,4.17,60,3.012,61,3.42,62,2.746,63,2.12,64,1.987,66,3.162,162,2.441,205,3.584,206,4.643,209,3.181,491,3.901,623,4.14,658,3.584,694,3.584,695,3.584,696,4.195,697,3.584,698,4.195,699,4.195]],["title/injectables/GroupsService.html",[83,1.075,491,1.943]],["body/injectables/GroupsService.html",[0,0.053,3,0.07,4,0.062,5,0.062,8,0.096,10,2.99,11,0.6,12,0.022,13,2.129,16,1.67,17,0.6,19,0.443,24,0.07,26,0.006,27,0.006,32,0.677,35,1.706,36,0.516,37,0.251,42,1.65,83,0.607,84,0.589,102,1.755,103,1.325,104,1.336,115,1.275,141,3.331,143,2.508,145,0.902,147,3.246,148,2.295,149,1.52,156,2.608,161,0.884,162,0.678,167,0.884,173,3.076,179,3.022,181,3.137,182,2.325,185,1.536,186,1.391,187,3.293,189,1.536,190,1.731,191,1.598,194,2.287,196,1.536,197,0.884,219,0.996,232,2.694,248,0.884,257,2.037,279,3.791,280,0.801,282,3.355,305,2.694,340,1.536,349,2.579,362,0.678,365,1.275,366,0.631,369,0.589,400,0.884,401,1.887,409,0.801,426,1.845,453,0.678,466,2.02,471,3.551,479,1.691,491,1.096,498,2.434,509,1.536,515,0.734,518,2.295,530,1.731,531,3.657,537,0.884,551,2.742,554,3.872,556,2.742,557,2.434,585,2.742,628,1.731,629,1.731,655,2.694,659,1.731,664,2.742,667,0.996,700,0.996,701,2.026,702,2.026,703,2.026,704,2.026,705,2.026,706,1.166,707,2.026,708,1.166,709,3.985,710,2.026,711,3.634,712,1.166,713,2.026,714,1.166,715,2.026,716,1.166,717,2.686,718,2.026,719,1.166,720,2.026,721,1.166,722,2.026,723,1.166,724,2.026,725,1.166,726,2.026,727,1.166,728,2.026,729,1.166,730,2.026,731,1.166,732,1.166,733,0.996,734,1.166,735,2.686,736,3.985,737,3.209,738,2.026,739,1.731,740,1.166,741,2.295,742,1.166,743,2.026,744,1.166,745,2.026,746,2.026,747,2.026,748,1.166,749,1.166,750,1.731,751,0.996,752,0.996,753,1.166,754,1.166,755,1.166,756,3.209,757,1.166,758,1.166,759,1.166,760,1.166,761,1.166,762,1.166,763,2.026,764,1.166,765,3.634,766,1.166,767,1.166,768,1.166,769,1.166,770,2.026,771,2.026,772,1.166,773,1.731,774,1.166,775,0.996,776,3.209,777,2.026,778,3.209,779,1.166,780,1.166,781,2.434,782,1.166,783,1.166,784,0.996,785,1.166,786,1.166,787,1.166,788,1.166,789,1.166,790,1.166,791,1.166,792,2.026,793,1.166,794,1.166,795,2.026,796,1.166,797,1.166,798,1.166,799,1.166,800,1.166,801,1.166,802,1.166,803,1.166,804,1.166,805,1.166,806,2.026,807,1.166,808,1.166,809,2.686,810,1.166,811,1.166,812,2.686,813,1.166,814,1.166]],["title/modules/PrismaModule.html",[44,1.199,60,1.598]],["body/modules/PrismaModule.html",[0,0.217,3,0.286,4,0.253,5,0.253,12,0.021,19,0.575,24,0.286,26,0.017,27,0.017,37,1.026,44,2.136,46,2.12,47,2.12,48,2.407,49,2.407,50,2.12,51,3.231,52,3.231,60,3.154,62,2.976,63,2.407,64,2.256,401,3.474,815,4.07,816,4.07,817,4.07,818,4.764,819,4.764]],["title/injectables/PrismaService.html",[83,1.075,401,1.701]],["body/injectables/PrismaService.html",[0,0.215,3,0.283,4,0.25,5,0.25,8,0.386,12,0.021,17,0.668,19,0.571,24,0.283,26,0.017,27,0.017,32,1.952,35,1.952,37,1.013,83,1.75,84,2.378,141,3.523,172,3.569,187,3.163,369,2.378,401,2.769,820,4.02,821,5.846,822,4.823,823,6.651,824,6.972,825,4.706,826,4.706,827,4.706,828,4.706]],["title/classes/Share.html",[0,0.164,303,2.09]],["body/classes/Share.html",[0,0.195,2,1.145,3,0.256,4,0.227,5,0.227,8,0.35,9,1.397,11,0.758,12,0.021,13,2.22,17,0.758,24,0.256,26,0.016,27,0.016,102,1.424,103,1.026,104,1.084,145,1.898,275,3.741,282,3.741,303,3.196,349,2.479,610,4.165,617,3.234,829,3.643,830,6.915,831,5.493,832,4.264,833,4.264,834,4.264,835,4.264,836,4.264,837,4.264]],["title/classes/ShareInputDto.html",[0,0.164,294,2.261]],["body/classes/ShareInputDto.html",[0,0.273,2,1.312,3,0.294,4,0.26,5,0.26,8,0.401,9,1.521,11,0.683,12,0.021,13,2.017,14,1.606,17,0.683,19,0.477,21,4.07,22,1.724,24,0.294,26,0.017,27,0.017,275,3.498,282,3.498,283,4.903,294,3.765,838,5.524,839,4.173,840,4.884,841,4.884]],["title/classes/SignInEmailDto.html",[0,0.164,99,2.09]],["body/classes/SignInEmailDto.html",[0,0.293,2,1.151,3,0.258,4,0.228,5,0.228,8,0.352,9,1.402,11,0.63,12,0.021,14,1.48,17,0.63,19,0.538,22,1.514,23,2.167,24,0.331,26,0.016,27,0.016,36,1.347,99,3.207,107,2.495,246,1.908,259,2.711,269,2.695,310,2.32,317,3.479,327,3.835,328,3.47,329,4.415,333,3.47,435,3.741,842,4.183,843,3.252,844,4.288,845,4.288,846,4.288,847,4.288,848,4.18]],["title/classes/SignInUsernameDto.html",[0,0.164,107,2.09]],["body/classes/SignInUsernameDto.html",[0,0.293,2,1.151,3,0.258,4,0.228,5,0.228,8,0.352,9,1.402,11,0.63,12,0.021,14,1.48,17,0.63,19,0.538,22,1.514,23,2.167,24,0.331,26,0.016,27,0.016,36,1.347,99,2.495,107,3.207,246,2.711,259,1.908,269,2.695,310,2.32,317,3.479,323,3.252,327,3.835,328,3.47,329,4.415,333,3.47,435,3.741,842,4.183,843,3.252,848,4.18,849,4.288,850,4.288,851,4.288]],["title/classes/SignUpDto.html",[0,0.164,111,2.261]],["body/classes/SignUpDto.html",[0,0.265,2,1.047,3,0.234,4,0.207,5,0.207,8,0.32,9,1.317,11,0.737,12,0.021,14,1.732,17,0.737,19,0.506,22,1.376,23,1.97,24,0.234,26,0.015,27,0.015,36,1.37,111,3.26,246,2.589,259,2.589,269,2.704,310,2.109,311,3.26,315,3.384,316,3.384,317,3.147,320,4.425,323,2.957,327,3.661,328,3.26,329,4.555,333,2.454,435,3.606,842,4.555,848,3.928,852,3.331,853,3.899,854,3.899,855,3.899,856,3.899,857,3.899,858,3.899,859,3.899]],["title/classes/UpdateExpenseCategoryDto.html",[0,0.164,359,2.261]],["body/classes/UpdateExpenseCategoryDto.html",[0,0.268,2,1.271,3,0.285,4,0.252,5,0.252,8,0.388,9,1.492,11,0.67,12,0.021,14,1.576,17,0.67,19,0.462,22,1.671,24,0.285,26,0.017,27,0.017,36,1.28,74,3.02,103,1.535,104,1.492,265,3.222,267,3.591,268,4.836,269,2.673,299,4.379,359,3.694,860,5.448,861,4.45,862,4.735,863,4.735]],["title/classes/UpdateExpenseDto.html",[0,0.164,447,2.261]],["body/classes/UpdateExpenseDto.html",[0,0.253,2,0.953,3,0.213,4,0.189,5,0.189,8,0.291,9,1.236,11,0.789,12,0.021,13,1.786,14,1.774,16,1.488,17,0.755,19,0.542,20,3.339,21,3.06,22,1.253,23,1.794,24,0.213,25,2.437,26,0.014,27,0.014,36,1.239,103,1.335,104,1.81,269,2.5,274,2.692,275,3,276,4.205,277,3.754,278,3.491,280,3.808,281,4.205,283,3.687,285,3.032,289,4.154,291,3.032,294,3.755,296,3.032,299,4.62,300,4.154,301,4.154,303,2.065,304,3.032,447,3.06,861,2.692,864,5.748,865,3.549,866,3.549,867,3.549,868,3.549,869,3.549,870,3.549,871,3.549,872,3.549,873,3.549]],["title/classes/UpdateGroupDto.html",[0,0.164,655,2.261]],["body/classes/UpdateGroupDto.html",[0,0.267,2,1.264,3,0.283,4,0.25,5,0.25,8,0.386,9,1.486,10,4.003,11,0.668,12,0.021,13,1.75,14,1.57,16,2.45,17,0.668,19,0.46,20,4.014,21,3.68,22,1.661,24,0.283,25,3.231,26,0.017,27,0.017,36,1.123,103,1.531,104,1.691,269,2.45,307,3.569,308,4.02,310,2.546,311,2.962,655,3.68,874,5.433,875,4.706,876,4.706,877,4.706]],["title/classes/UpdateUserDto.html",[0,0.164,878,2.261]],["body/classes/UpdateUserDto.html",[0,0.236,2,1.047,3,0.234,4,0.207,5,0.207,8,0.32,9,1.317,11,0.757,12,0.021,14,1.781,17,0.757,19,0.381,22,1.376,24,0.234,26,0.015,27,0.015,36,1.37,104,1.814,246,2.589,259,2.589,269,2.78,299,4.648,310,2.109,311,3.661,314,2.957,315,3.384,316,3.384,317,3.147,322,3.331,328,3.26,333,2.454,861,2.957,878,3.26,879,5.782,880,5.817,881,3.899,882,3.899,883,5.817,884,3.899,885,3.899,886,3.899,887,3.899,888,3.899]],["title/classes/User.html",[0,0.164,191,1.341]],["body/classes/User.html",[0,0.165,2,0.973,3,0.218,4,0.193,5,0.193,8,0.297,9,1.254,11,0.783,12,0.021,13,1.884,17,0.783,24,0.218,26,0.014,27,0.014,36,1.417,102,1.211,103,0.872,104,0.922,145,2.195,182,1.95,191,1.841,246,2.957,259,2.957,277,3.778,315,3.865,316,3.865,317,3.594,349,2.425,601,3.849,602,3.849,610,2.749,617,2.749,621,3.096,622,3.096,889,3.096,890,4.932,891,3.624,892,3.624,893,3.624,894,3.624,895,3.624,896,3.624,897,3.624,898,3.624,899,3.624,900,3.624,901,3.624,902,3.624]],["title/guards/UserGuard.html",[137,2.724,903,2.724]],["body/guards/UserGuard.html",[0,0.177,3,0.233,4,0.206,5,0.206,8,0.318,11,0.59,12,0.021,13,1.161,16,2.164,17,0.59,19,0.604,24,0.233,26,0.015,27,0.015,32,1.724,35,1.296,37,0.835,40,1.837,42,1.724,83,1.546,102,1.724,103,1.242,104,1.313,139,2.942,142,5.284,145,1.726,150,5.658,152,4.41,153,4.691,155,3.314,158,4.4,163,2.942,164,2.664,168,2.932,169,2.257,170,2.442,171,2.442,172,2.942,173,3.126,176,3.314,178,3.314,181,2.793,182,2.041,184,3.314,191,1.448,195,2.942,349,1.448,398,3.314,509,2.942,557,2.942,693,3.314,775,3.314,903,3.915,904,3.314,905,3.879,906,3.879,907,3.879,908,5.162,909,5.162,910,3.879,911,3.879,912,3.879,913,3.879,914,5.162,915,5.802,916,3.879,917,3.879,918,3.879]],["title/controllers/UsersController.html",[28,1.341,919,2.466]],["body/controllers/UsersController.html",[0,0.148,3,0.195,4,0.173,5,0.173,8,0.267,11,0.691,12,0.021,14,1.542,17,0.656,19,0.643,24,0.195,26,0.013,27,0.013,28,1.214,30,1.285,32,1.528,35,1.918,36,1.016,37,0.7,40,1.54,41,2.232,42,1.918,93,2.046,102,1.918,103,1.382,104,1.46,114,2.046,116,2.232,149,2.506,156,3.118,168,3.428,169,1.891,170,2.046,171,2.046,191,2.561,239,2.777,246,1.447,259,1.447,349,1.708,362,3.079,363,2.232,365,2.046,376,3.469,378,2.232,385,3.469,453,1.891,454,2.879,456,2.465,479,2.879,599,2.232,781,2.465,878,4.06,919,3.141,920,2.777,921,4.574,922,3.908,923,3.251,924,3.251,925,3.251,926,3.251,927,3.251,928,3.251,929,2.777,930,3.251,931,3.251,932,3.251,933,3.251,934,3.251,935,3.251,936,2.777,937,2.777,938,4.574,939,2.777,940,3.251,941,3.251,942,2.777,943,3.251,944,3.251,945,3.251,946,3.251,947,3.251,948,3.251,949,3.251,950,3.251,951,3.251,952,3.251,953,3.251,954,3.251,955,3.251,956,3.251]],["title/modules/UsersModule.html",[44,1.199,61,1.815]],["body/modules/UsersModule.html",[0,0.202,3,0.266,4,0.235,5,0.235,12,0.021,19,0.635,24,0.266,26,0.016,27,0.016,30,2.223,37,0.952,44,2.064,46,1.968,47,1.968,48,2.235,49,2.235,50,1.968,51,3.123,52,3.123,60,3.055,61,3.601,62,2.841,63,2.235,64,2.095,66,3.271,149,3.44,209,3.354,919,4.245,937,3.779,957,3.779,958,4.423,959,3.779,960,3.779,961,4.423,962,4.423]],["title/injectables/UsersService.html",[83,1.075,149,1.701]],["body/injectables/UsersService.html",[0,0.084,3,0.111,4,0.098,5,0.098,8,0.151,11,0.668,12,0.022,13,1.904,17,0.668,19,0.517,24,0.111,26,0.009,27,0.009,32,0.992,35,1.902,36,1.093,37,0.396,40,0.871,42,1.997,83,0.889,84,0.929,102,1.953,103,1.407,104,1.487,141,3.486,143,2.352,145,0.819,149,1.407,156,3.103,160,1.395,173,3.021,181,2.547,182,2.251,185,1.395,187,3.296,191,2.345,194,2.352,196,1.395,232,1.87,237,2.252,240,3.253,244,3.664,246,2.357,248,2.252,252,4.301,257,1.395,258,1.571,259,2.357,312,3.232,315,2.174,316,2.174,317,2.021,349,2.466,362,1.728,366,0.995,369,0.929,401,2.031,409,1.263,431,2.04,453,1.07,466,1.87,479,1.87,515,1.158,601,2.04,602,2.04,733,1.571,741,3.192,750,1.571,751,1.571,752,1.571,773,3.664,781,1.395,784,1.571,822,2.252,878,3.47,922,2.537,929,2.537,936,1.571,942,2.537,963,1.571,964,2.97,965,2.97,966,2.97,967,2.97,968,2.97,969,1.839,970,1.839,971,2.97,972,1.839,973,2.97,974,1.839,975,2.97,976,1.839,977,2.97,978,1.839,979,2.97,980,1.839,981,2.97,982,1.839,983,2.97,984,1.839,985,2.97,986,1.839,987,2.97,988,1.839,989,2.97,990,2.97,991,2.97,992,4.289,993,5.034,994,5.034,995,5.034,996,4.289,997,2.97,998,2.97,999,1.839,1000,2.97,1001,1.839,1002,1.839,1003,1.839,1004,1.839,1005,1.839,1006,1.839,1007,1.839,1008,1.839,1009,1.839,1010,1.839,1011,1.839,1012,1.839,1013,1.839,1014,1.839,1015,1.839,1016,1.839,1017,1.839,1018,1.839,1019,2.97,1020,1.839,1021,1.839]],["title/coverage.html",[1022,3.717]],["body/coverage.html",[0,0.319,1,1.861,5,0.144,6,2.315,7,2.315,11,0.603,12,0.021,26,0.011,27,0.011,28,2.202,29,2.055,31,2.315,38,1.576,50,1.206,74,1.899,75,2.17,83,1.827,85,2.315,91,1.861,92,2.315,99,1.576,107,1.576,111,1.706,118,1.576,120,2.055,137,3.041,138,1.861,140,2.315,149,1.283,165,2.055,168,1.369,182,1.071,191,1.497,222,1.861,223,2.315,224,3.041,227,2.315,264,1.706,265,2.667,266,2.315,267,3.041,272,1.706,273,2.315,274,3.041,294,1.706,303,1.576,305,1.706,306,2.315,307,3.041,312,1.861,313,2.315,314,3.041,330,2.055,334,1.861,335,2.315,359,1.706,370,1.466,399,2.315,401,1.283,424,1.861,425,2.315,432,1.861,447,1.706,450,1.576,454,1.706,471,1.466,489,2.315,491,1.466,515,1.706,537,5.615,599,1.861,600,2.315,609,2.315,623,1.861,624,2.315,655,1.706,700,2.315,820,2.315,829,2.315,838,2.315,839,2.315,842,3.279,843,3.041,852,2.315,860,2.315,864,2.315,874,2.315,878,1.706,879,2.315,889,2.315,903,2.055,904,2.315,919,1.861,920,2.315,963,2.315,1022,2.055,1023,2.315,1024,2.709,1025,2.709,1026,3.621,1027,4.775,1028,2.315,1029,6.605,1030,2.315,1031,5.633,1032,5.633,1033,4.01,1034,4.01,1035,3.426,1036,6.267,1037,4.775,1038,4.775,1039,5.277,1040,4.775,1041,2.709,1042,2.709,1043,2.315,1044,2.315,1045,2.315,1046,2.315,1047,2.315,1048,2.315,1049,4.775,1050,2.315,1051,2.315,1052,2.315,1053,2.315,1054,2.315,1055,2.709,1056,2.709,1057,2.709]],["title/dependencies.html",[47,1.922,1058,2.562]],["body/dependencies.html",[0,0.266,12,0.021,22,1.651,23,2.364,26,0.017,27,0.017,37,1.007,47,2.082,69,3.547,162,2.721,163,4.416,164,3.212,237,3.547,369,2.364,939,3.996,1059,4.677,1060,4.677,1061,4.677,1062,6.342,1063,4.677,1064,4.677,1065,4.677,1066,4.677,1067,4.677,1068,4.677,1069,4.677,1070,4.677,1071,4.677,1072,4.677,1073,6.342,1074,4.677,1075,4.677,1076,4.677,1077,4.677,1078,4.677,1079,4.677,1080,4.677,1081,4.677,1082,4.677,1083,4.677,1084,4.677,1085,4.677,1086,4.677]],["title/miscellaneous/functions.html",[1087,1.745,1088,3.69]],["body/miscellaneous/functions.html",[8,0.447,12,0.018,26,0.018,27,0.018,50,3.016,1026,4.135,1028,5.79,1030,5.79,1043,4.658,1087,3.173,1088,4.658,1089,5.453,1090,5.459]],["title/index.html",[8,0.246,1091,2.999,1092,2.999]],["body/index.html",[4,0.16,12,0.02,26,0.012,27,0.012,64,2.899,278,1.895,431,2.974,595,2.283,739,5.229,1022,2.283,1023,3.7,1093,5.072,1094,4.331,1095,3.01,1096,3.01,1097,3.01,1098,3.01,1099,3.01,1100,3.01,1101,5.072,1102,4.331,1103,3.01,1104,3.01,1105,3.01,1106,3.01,1107,4.331,1108,5.072,1109,3.01,1110,3.01,1111,3.01,1112,5.547,1113,3.01,1114,5.547,1115,6.454,1116,3.01,1117,6.307,1118,3.01,1119,3.01,1120,3.01,1121,3.01,1122,4.331,1123,3.01,1124,5.072,1125,3.01,1126,3.01,1127,3.01,1128,3.01,1129,3.01,1130,3.01,1131,5.547,1132,6.454,1133,6.12,1134,3.01,1135,4.331,1136,3.01,1137,3.01,1138,3.01,1139,3.01,1140,3.01,1141,4.331,1142,5.547,1143,3.01,1144,4.331,1145,3.01,1146,3.01,1147,4.331,1148,5.877,1149,5.547,1150,3.01,1151,4.331,1152,3.01,1153,3.01,1154,3.01,1155,3.01,1156,5.547,1157,3.01,1158,3.01,1159,3.01,1160,3.01,1161,3.01,1162,4.331,1163,3.01,1164,3.01,1165,3.01,1166,3.01,1167,3.01,1168,4.331,1169,3.01,1170,3.01,1171,3.01,1172,4.331,1173,3.01,1174,3.01,1175,4.739,1176,4.331,1177,3.01,1178,3.01,1179,3.01,1180,3.01,1181,3.01,1182,3.01,1183,3.01,1184,3.01,1185,4.331,1186,3.01,1187,3.01,1188,3.01,1189,3.01,1190,5.072,1191,3.01,1192,3.01,1193,3.01,1194,3.01,1195,3.01,1196,4.331,1197,3.01,1198,3.01,1199,3.01,1200,3.01,1201,3.01,1202,4.331,1203,3.01,1204,3.01,1205,3.01,1206,4.331,1207,4.331,1208,3.01,1209,3.01,1210,3.01,1211,3.01,1212,3.01,1213,3.01,1214,3.01,1215,3.01,1216,3.01,1217,3.01,1218,3.01,1219,2.572,1220,3.01,1221,3.01,1222,3.01,1223,3.01,1224,3.01,1225,3.01,1226,2.572]],["title/modules.html",[46,2.181]],["body/modules.html",[12,0.018,26,0.018,27,0.018,45,3.509,46,2.274,56,3.217,57,2.973,58,3.217,59,2.973,60,2.274,61,2.582,1175,6.143,1227,7.191,1228,7.191,1229,7.191]],["title/overview.html",[1230,4.187]],["body/overview.html",[2,0.919,12,0.021,26,0.014,27,0.014,30,1.354,38,3.166,44,1.143,45,4.913,46,1.524,47,1.524,48,1.73,49,1.73,50,1.524,51,1.73,52,1.73,53,2.925,54,2.925,55,2.925,56,4.262,57,3.94,58,4.429,59,4.029,60,3.082,61,3.5,62,2.397,63,1.73,64,1.621,84,1.73,118,3.166,139,2.596,149,3.099,200,2.925,202,2.925,370,3.54,391,2.925,393,2.925,394,2.925,401,3.099,450,3.166,483,2.925,484,2.925,491,3.54,694,2.925,695,2.925,697,2.925,815,2.925,816,2.925,817,2.925,957,2.925,959,2.925,960,2.925,1230,2.925,1231,4.743,1232,3.424,1233,3.424,1234,3.424]],["title/properties.html",[9,1.098,1058,2.562]],["body/properties.html",[9,1.416,12,0.021,26,0.019,27,0.019,278,3.507,1219,4.759,1226,4.759,1235,5.571,1236,5.571,1237,5.571]],["title/miscellaneous/typealiases.html",[1087,1.745,1238,4.319]],["body/miscellaneous/typealiases.html",[8,0.429,11,0.712,12,0.02,26,0.018,27,0.018,168,3.151,275,2.83,432,4.281,595,3.967,597,4.469,1047,4.469,1048,5.326,1050,4.469,1051,5.326,1052,5.326,1053,4.469,1054,5.326,1087,3.044,1239,5.231,1240,5.231,1241,5.231,1242,5.231,1243,5.231]],["title/miscellaneous/variables.html",[1087,1.745,1244,3.69]],["body/miscellaneous/variables.html",[8,0.362,11,0.504,12,0.021,16,1.848,26,0.016,27,0.016,36,1.185,42,1.473,120,4.256,153,3.345,158,4.256,165,4.256,168,2.836,173,2.229,174,3.768,182,1.744,195,3.345,327,2.776,330,4.256,434,5.088,435,4.144,454,3.533,498,3.345,515,3.533,822,3.345,1026,3.345,1035,3.768,1044,3.768,1045,4.795,1046,3.768,1087,2.566,1090,3.768,1244,3.768,1245,4.41,1246,5.612,1247,4.41,1248,4.41,1249,4.41,1250,4.41,1251,4.41,1252,4.41,1253,4.41]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":537,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1236,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1020,"title":{},"body":{"injectables/UsersService.html":{}}}],["100",{"_index":598,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["11.0.0",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["11.1.5",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1233,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":803,"title":{},"body":{"injectables/GroupsService.html":{}}}],["1y",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":1234,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1232,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1231,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["9.8.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["acc",{"_index":536,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["access",{"_index":914,"title":{},"body":{"guards/UserGuard.html":{}}}],["access_token",{"_index":225,"title":{},"body":{"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{}}}],["add",{"_index":664,"title":{},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["added",{"_index":777,"title":{},"body":{"injectables/GroupsService.html":{}}}],["addmultiplemembers",{"_index":625,"title":{},"body":{"controllers/GroupsController.html":{}}}],["addmultiplemembers(@currentuser",{"_index":682,"title":{},"body":{"controllers/GroupsController.html":{}}}],["addmultiplemembers(user",{"_index":632,"title":{},"body":{"controllers/GroupsController.html":{}}}],["addsinglemember",{"_index":626,"title":{},"body":{"controllers/GroupsController.html":{}}}],["addsinglemember(@currentuser",{"_index":686,"title":{},"body":{"controllers/GroupsController.html":{}}}],["addsinglemember(user",{"_index":635,"title":{},"body":{"controllers/GroupsController.html":{}}}],["adduser",{"_index":701,"title":{},"body":{"injectables/GroupsService.html":{}}}],["adduser(currentmember",{"_index":707,"title":{},"body":{"injectables/GroupsService.html":{}}}],["addusers",{"_index":702,"title":{},"body":{"injectables/GroupsService.html":{}}}],["addusers(currentmember",{"_index":710,"title":{},"body":{"injectables/GroupsService.html":{}}}],["addusersdto",{"_index":1,"title":{"classes/AddUsersDto.html":{}},"body":{"classes/AddUsersDto.html":{},"controllers/GroupsController.html":{},"coverage.html":{}}}],["alias",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":913,"title":{},"body":{"guards/UserGuard.html":{}}}],["allowing",{"_index":1163,"title":{},"body":{"index.html":{}}}],["already",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":1212,"title":{},"body":{"index.html":{}}}],["amount",{"_index":275,"title":{},"body":{"classes/CreateExpenseDto.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/UpdateExpenseDto.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["apiokresponse",{"_index":938,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["app.service",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":29,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["application",{"_index":1133,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1107,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":38,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":494,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["arraynotempty",{"_index":302,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["assertisgroupmember",{"_index":703,"title":{},"body":{"injectables/GroupsService.html":{}}}],["assertisgroupmember(userid",{"_index":713,"title":{},"body":{"injectables/GroupsService.html":{}}}],["associated",{"_index":558,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["assuming",{"_index":511,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["async",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["authconfig",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":91,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":138,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1219,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authresponsedto",{"_index":222,"title":{"classes/AuthResponseDto.html":{}},"body":{"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":118,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":880,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["await",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1151,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1213,"title":{},"body":{"index.html":{}}}],["based",{"_index":1146,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1021,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["belong",{"_index":533,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["board",{"_index":1205,"title":{},"body":{"index.html":{}}}],["body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":908,"title":{},"body":{"guards/UserGuard.html":{}}}],["bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1229,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1227,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1102,"title":{},"body":{"index.html":{}}}],["cache",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["calculateshares",{"_index":490,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["calculateshares(amount",{"_index":493,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["can't",{"_index":794,"title":{},"body":{"injectables/GroupsService.html":{}}}],["canactivate",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate(context",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["case",{"_index":594,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["catch",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["categories",{"_index":336,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller",{"_index":396,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{}}}],["categories.controller.ts",{"_index":335,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"coverage.html":{}}}],["categories.controller.ts:14",{"_index":345,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller.ts:21",{"_index":351,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller.ts:28",{"_index":354,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller.ts:35",{"_index":361,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller.ts:42",{"_index":348,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.controller.ts:49",{"_index":357,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["categories.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{}}}],["categories.module.ts",{"_index":395,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{}}}],["categories.service",{"_index":371,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpensesService.html":{}}}],["categories.service.ts",{"_index":399,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"coverage.html":{}}}],["categories.service.ts:11",{"_index":403,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:20",{"_index":405,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:24",{"_index":406,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:35",{"_index":407,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:41",{"_index":408,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:60",{"_index":404,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories.service.ts:8",{"_index":402,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["categories/dto/create",{"_index":266,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{},"coverage.html":{}}}],["categories/dto/update",{"_index":860,"title":{},"body":{"classes/UpdateExpenseCategoryDto.html":{},"coverage.html":{}}}],["categories/expense",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"coverage.html":{}}}],["category",{"_index":415,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{}}}],["category.dto",{"_index":367,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["category.dto.ts",{"_index":267,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:11",{"_index":862,"title":{},"body":{"classes/UpdateExpenseCategoryDto.html":{}}}],["category.dto.ts:6",{"_index":271,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{}}}],["category.dto.ts:7",{"_index":863,"title":{},"body":{"classes/UpdateExpenseCategoryDto.html":{}}}],["category.dto.ts:8",{"_index":270,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{}}}],["category.id",{"_index":548,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["categoryid",{"_index":276,"title":{},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseDto.html":{}}}],["channel",{"_index":1178,"title":{},"body":{"index.html":{}}}],["check",{"_index":739,"title":{},"body":{"injectables/GroupsService.html":{},"index.html":{}}}],["circleci",{"_index":1094,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddUsersDto.html":{},"classes/AuthResponseDto.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/AuthResponseDto.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clicks",{"_index":1162,"title":{},"body":{"index.html":{}}}],["clone",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["cloud",{"_index":1145,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_expensecategoriesmodule",{"_index":391,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{},"overview.html":{}}}],["cluster_expensecategoriesmodule_exports",{"_index":393,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{},"overview.html":{}}}],["cluster_expensecategoriesmodule_imports",{"_index":392,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{}}}],["cluster_expensecategoriesmodule_providers",{"_index":394,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{},"overview.html":{}}}],["cluster_expensesmodule",{"_index":483,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_expensesmodule_imports",{"_index":485,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["cluster_expensesmodule_providers",{"_index":484,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_groupsmodule",{"_index":694,"title":{},"body":{"modules/GroupsModule.html":{},"overview.html":{}}}],["cluster_groupsmodule_exports",{"_index":695,"title":{},"body":{"modules/GroupsModule.html":{},"overview.html":{}}}],["cluster_groupsmodule_imports",{"_index":696,"title":{},"body":{"modules/GroupsModule.html":{}}}],["cluster_groupsmodule_providers",{"_index":697,"title":{},"body":{"modules/GroupsModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":815,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":816,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":817,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":957,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":960,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":958,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":959,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":1169,"title":{},"body":{"index.html":{}}}],["config/auth.config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt.expiresin",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt.secret",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["connect",{"_index":585,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["console.log(`user",{"_index":810,"title":{},"body":{"injectables/GroupsService.html":{}}}],["const",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(id",{"_index":610,"title":{},"body":{"classes/Group.html":{},"classes/Share.html":{},"classes/User.html":{}}}],["constructor(jwtservice",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(prismaclient",{"_index":969,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(prismaservice",{"_index":400,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":905,"title":{},"body":{"guards/UserGuard.html":{}}}],["constructor(usersservice",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["context.getclass",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["controller",{"_index":28,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('expense",{"_index":372,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["controller('expenses",{"_index":459,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["controller('groups",{"_index":662,"title":{},"body":{"controllers/GroupsController.html":{}}}],["controller('users",{"_index":943,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["conversionmode",{"_index":432,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["courses",{"_index":1184,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1022,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":466,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["create(@currentuser",{"_index":675,"title":{},"body":{"controllers/GroupsController.html":{}}}],["create(createuserdto",{"_index":971,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(creatorid",{"_index":715,"title":{},"body":{"injectables/GroupsService.html":{}}}],["create(user",{"_index":638,"title":{},"body":{"controllers/GroupsController.html":{}}}],["createdat",{"_index":601,"title":{},"body":{"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["createexpensecategorydto",{"_index":264,"title":{"classes/CreateExpenseCategoryDto.html":{}},"body":{"classes/CreateExpenseCategoryDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"coverage.html":{}}}],["createexpensecategorydto.icon",{"_index":413,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["createexpensecategorydto.name",{"_index":412,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["createexpensedto",{"_index":272,"title":{"classes/CreateExpenseDto.html":{}},"body":{"classes/CreateExpenseDto.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"coverage.html":{}}}],["createexpensedto.amount",{"_index":538,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.categoryid",{"_index":541,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.date",{"_index":547,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.description",{"_index":545,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.groupid",{"_index":517,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.name",{"_index":544,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.note",{"_index":549,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.shares",{"_index":521,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.shares.length",{"_index":526,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.shares.some((share",{"_index":522,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createexpensedto.userid",{"_index":546,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["creategroupdto",{"_index":305,"title":{"classes/CreateGroupDto.html":{}},"body":{"classes/CreateGroupDto.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"coverage.html":{}}}],["creategroupdto.name",{"_index":749,"title":{},"body":{"injectables/GroupsService.html":{}}}],["createone",{"_index":337,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["createone(@body",{"_index":374,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["createone(@currentuser",{"_index":467,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["createone(createexpensecategorydto",{"_index":343,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["createone(user",{"_index":430,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["createone(userid",{"_index":496,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["createparamdecorator((data",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":312,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1006,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":1004,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":1005,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":1003,"title":{},"body":{"injectables/UsersService.html":{}}}],["creatorid",{"_index":717,"title":{},"body":{"injectables/GroupsService.html":{}}}],["credentials",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":740,"title":{},"body":{"injectables/GroupsService.html":{}}}],["currentmember",{"_index":709,"title":{},"body":{"injectables/GroupsService.html":{}}}],["currentuser",{"_index":454,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["data.email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.members",{"_index":760,"title":{},"body":{"injectables/GroupsService.html":{}}}],["data.username",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":277,"title":{},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/UpdateExpenseDto.html":{},"classes/User.html":{}}}],["declarations",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":911,"title":{},"body":{"guards/UserGuard.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["decorators/current",{"_index":455,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{}}}],["decorators/public.decorator",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["deeper",{"_index":1180,"title":{},"body":{"index.html":{}}}],["default",{"_index":434,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":362,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete(':id",{"_index":384,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{}}}],["delete(':id')@httpcode(204",{"_index":347,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["delete(':id/members/:userid",{"_index":688,"title":{},"body":{"controllers/GroupsController.html":{}}}],["delete(':id/members/:userid')@httpcode(204",{"_index":652,"title":{},"body":{"controllers/GroupsController.html":{}}}],["delete(':id/members/me",{"_index":691,"title":{},"body":{"controllers/GroupsController.html":{}}}],["delete(':id/members/me')@httpcode(204",{"_index":649,"title":{},"body":{"controllers/GroupsController.html":{}}}],["delete('me",{"_index":949,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@currentuser",{"_index":950,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(id",{"_index":973,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete(user",{"_index":923,"title":{},"body":{"controllers/UsersController.html":{}}}],["deletemany",{"_index":579,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["deleteone",{"_index":338,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["deleteone(@currentuser",{"_index":481,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["deleteone(@param('id",{"_index":386,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["deleteone(id",{"_index":346,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["deleteone(user",{"_index":436,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["deleteone(userid",{"_index":499,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1131,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1150,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1141,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1161,"title":{},"body":{"index.html":{}}}],["description",{"_index":278,"title":{},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":1118,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1192,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":800,"title":{},"body":{"injectables/GroupsService.html":{}}}],["discord",{"_index":1177,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1179,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1023,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":797,"title":{},"body":{"injectables/GroupsService.html":{}}}],["dto/add",{"_index":660,"title":{},"body":{"controllers/GroupsController.html":{}}}],["dto/auth",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":366,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["dto/get",{"_index":940,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/sign",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":453,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":812,"title":{},"body":{"injectables/GroupsService.html":{}}}],["e2e",{"_index":1126,"title":{},"body":{"index.html":{}}}],["each",{"_index":25,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{}}}],["efficient",{"_index":1103,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1139,"title":{},"body":{"index.html":{}}}],["email",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":1137,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":1195,"title":{},"body":{"index.html":{}}}],["entity/group.entity",{"_index":734,"title":{},"body":{"injectables/GroupsService.html":{}}}],["entity/user.entity",{"_index":936,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["equal",{"_index":540,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["equals",{"_index":990,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":741,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":752,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":1114,"title":{},"body":{"index.html":{}}}],["exceed",{"_index":529,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["executioncontext",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["existingcategory",{"_index":419,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["existinguserids",{"_index":783,"title":{},"body":{"injectables/GroupsService.html":{}}}],["existinguserids.includes(id",{"_index":787,"title":{},"body":{"injectables/GroupsService.html":{}}}],["exists",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["expense",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateExpenseCategoryDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseCategoryDto.html":{},"coverage.html":{}}}],["expense.dto",{"_index":452,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["expense.dto.ts",{"_index":274,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["expense.dto.ts:12",{"_index":290,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:13",{"_index":869,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:15",{"_index":284,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:17",{"_index":866,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:19",{"_index":288,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:21",{"_index":871,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:23",{"_index":293,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:26",{"_index":868,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:27",{"_index":286,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:30",{"_index":291,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:33",{"_index":298,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:36",{"_index":873,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.dto.ts:39",{"_index":297,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:8",{"_index":292,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["expense.dto.ts:9",{"_index":870,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["expense.group.members.length",{"_index":570,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["expense.group.members.some((member",{"_index":555,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["expense.id",{"_index":745,"title":{},"body":{"injectables/GroupsService.html":{}}}],["expense.userid",{"_index":590,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["expense/:id",{"_index":461,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["expense/group/:groupid",{"_index":470,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["expense/user/:userid",{"_index":475,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["expensecategoriescontroller",{"_index":334,"title":{"controllers/ExpenseCategoriesController.html":{}},"body":{"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"coverage.html":{}}}],["expensecategoriesmodule",{"_index":57,"title":{"modules/ExpenseCategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules.html":{},"overview.html":{}}}],["expensecategoriesservice",{"_index":370,"title":{"injectables/ExpenseCategoriesService.html":{}},"body":{"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"coverage.html":{},"overview.html":{}}}],["expensecategory",{"_index":368,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{}}}],["expenseid",{"_index":830,"title":{},"body":{"classes/Share.html":{}}}],["expenseids",{"_index":743,"title":{},"body":{"injectables/GroupsService.html":{}}}],["expenses",{"_index":426,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"injectables/GroupsService.html":{}}}],["expenses.controller",{"_index":487,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["expenses.length",{"_index":564,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["expenses.service",{"_index":451,"title":{},"body":{"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{}}}],["expenses/expenses.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["expensescontroller",{"_index":424,"title":{"controllers/ExpensesController.html":{}},"body":{"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"coverage.html":{}}}],["expenseservice",{"_index":460,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["expenseshares",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["expensesmodule",{"_index":58,"title":{"modules/ExpensesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{},"modules.html":{},"overview.html":{}}}],["expensesservice",{"_index":450,"title":{"injectables/ExpensesService.html":{}},"body":{"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"coverage.html":{},"overview.html":{}}}],["experience",{"_index":1182,"title":{},"body":{"index.html":{}}}],["expired",{"_index":813,"title":{},"body":{"injectables/GroupsService.html":{}}}],["expiresin",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GroupsService.html":{}}}],["export",{"_index":24,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exporting",{"_index":397,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{}}}],["exports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":821,"title":{},"body":{"injectables/PrismaService.html":{}}}],["extracttokenfromheader",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["faker",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["fast",{"_index":1154,"title":{},"body":{"index.html":{}}}],["features",{"_index":1165,"title":{},"body":{"index.html":{}}}],["few",{"_index":1156,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":956,"title":{},"body":{"controllers/UsersController.html":{}}}],["findonebyemail",{"_index":964,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":975,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":965,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":977,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":966,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":979,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":1164,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1199,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":509,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"guards/UserGuard.html":{}}}],["forbiddenexception(\"you",{"_index":793,"title":{},"body":{"injectables/GroupsService.html":{}}}],["forbiddenexception('all",{"_index":532,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["forbiddenexception('each",{"_index":525,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["forbiddenexception('the",{"_index":528,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["forbiddenexception('user",{"_index":775,"title":{},"body":{"injectables/GroupsService.html":{},"guards/UserGuard.html":{}}}],["forbiddenexception('you",{"_index":557,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"guards/UserGuard.html":{}}}],["found",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":1101,"title":{},"body":{"index.html":{}}}],["full",{"_index":1194,"title":{},"body":{"index.html":{}}}],["function",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1088,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1159,"title":{},"body":{"index.html":{}}}],["generatetoken",{"_index":704,"title":{},"body":{"injectables/GroupsService.html":{}}}],["generatetoken(groupid",{"_index":718,"title":{},"body":{"injectables/GroupsService.html":{}}}],["get('/group/:groupid",{"_index":441,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["get('/user/:userid",{"_index":444,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["get(':id",{"_index":378,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apiokresponse({type",{"_index":930,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@httpcode(200",{"_index":353,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{}}}],["get(':id/invite",{"_index":668,"title":{},"body":{"controllers/GroupsController.html":{}}}],["get(':id/invite')@httpcode(200",{"_index":643,"title":{},"body":{"controllers/GroupsController.html":{}}}],["get('me",{"_index":944,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me')@httpcode(200",{"_index":927,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me/groups",{"_index":955,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('name/:name",{"_index":388,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["get('name/:name')@httpcode(200",{"_index":356,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["get()@httpcode(200",{"_index":350,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["getall",{"_index":339,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["getbyid",{"_index":340,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/GroupsService.html":{}}}],["getbyid(@param('id",{"_index":379,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["getbyid(id",{"_index":352,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["getbyid(userid",{"_index":720,"title":{},"body":{"injectables/GroupsService.html":{}}}],["getbyname",{"_index":341,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["getbyname(@param('name",{"_index":389,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["getbyname(name",{"_index":355,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["getgroupbyid",{"_index":627,"title":{},"body":{"controllers/GroupsController.html":{}}}],["getgroupbyid(@currentuser",{"_index":677,"title":{},"body":{"controllers/GroupsController.html":{}}}],["getgroupbyid(user",{"_index":640,"title":{},"body":{"controllers/GroupsController.html":{}}}],["gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinvitelink",{"_index":628,"title":{},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["getinvitelink(@currentuser",{"_index":669,"title":{},"body":{"controllers/GroupsController.html":{}}}],["getinvitelink(user",{"_index":642,"title":{},"body":{"controllers/GroupsController.html":{}}}],["getinvitelink(userid",{"_index":722,"title":{},"body":{"injectables/GroupsService.html":{}}}],["getmany",{"_index":967,"title":{},"body":{"injectables/UsersService.html":{}}}],["getmany(ids",{"_index":981,"title":{},"body":{"injectables/UsersService.html":{}}}],["getme",{"_index":921,"title":{},"body":{"controllers/UsersController.html":{}}}],["getme(@currentuser",{"_index":945,"title":{},"body":{"controllers/UsersController.html":{}}}],["getme(user",{"_index":926,"title":{},"body":{"controllers/UsersController.html":{}}}],["getone",{"_index":922,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getone(@param('id",{"_index":947,"title":{},"body":{"controllers/UsersController.html":{}}}],["getone(id",{"_index":929,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getonebyid",{"_index":427,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["getonebyid(@currentuser",{"_index":463,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getonebyid(user",{"_index":438,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getonebyid(userid",{"_index":501,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["getsomeofgroup",{"_index":428,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["getsomeofgroup(@currentuser",{"_index":472,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getsomeofgroup(user",{"_index":440,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getsomeofgroup(userid",{"_index":503,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["getsomeofuser",{"_index":429,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["getsomeofuser(@currentuser",{"_index":476,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getsomeofuser(user",{"_index":443,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["getsomeofuser(userid",{"_index":505,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["getting",{"_index":1091,"title":{"index.html":{}},"body":{}}],["getuserresponsedto",{"_index":599,"title":{"classes/GetUserResponseDto.html":{}},"body":{"classes/GetUserResponseDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["global",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":1187,"title":{},"body":{"index.html":{}}}],["group",{"_index":471,"title":{"classes/Group.html":{}},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"coverage.html":{}}}],["group(group.id",{"_index":746,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group.dto",{"_index":659,"title":{},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["group.dto.ts",{"_index":307,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/UpdateGroupDto.html":{},"coverage.html":{}}}],["group.dto.ts:11",{"_index":876,"title":{},"body":{"classes/UpdateGroupDto.html":{}}}],["group.dto.ts:6",{"_index":309,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["group.dto.ts:7",{"_index":877,"title":{},"body":{"classes/UpdateGroupDto.html":{}}}],["group.expenses.map((expense",{"_index":744,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group.members.length",{"_index":527,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["group.members.map((member",{"_index":742,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group.members.some((member",{"_index":530,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["group.name",{"_index":747,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group/:id",{"_index":738,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group/:id/members",{"_index":779,"title":{},"body":{"injectables/GroupsService.html":{}}}],["group/:id/members/:userid",{"_index":770,"title":{},"body":{"injectables/GroupsService.html":{}}}],["groupid",{"_index":279,"title":{},"body":{"classes/CreateExpenseDto.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["groups",{"_index":561,"title":{},"body":{"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{}}}],["groups.controller",{"_index":699,"title":{},"body":{"modules/GroupsModule.html":{}}}],["groups.service",{"_index":658,"title":{},"body":{"controllers/GroupsController.html":{},"modules/GroupsModule.html":{}}}],["groups/groups.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["groupscontroller",{"_index":623,"title":{"controllers/GroupsController.html":{}},"body":{"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"coverage.html":{}}}],["groupservice",{"_index":663,"title":{},"body":{"controllers/GroupsController.html":{}}}],["groupsmodule",{"_index":59,"title":{"modules/GroupsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules.html":{},"overview.html":{}}}],["groupsservice",{"_index":491,"title":{"injectables/GroupsService.html":{}},"body":{"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1209,"title":{},"body":{"index.html":{}}}],["guard",{"_index":137,"title":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["handle",{"_index":512,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["hands",{"_index":1181,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1170,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":1000,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":968,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword(password",{"_index":985,"title":{},"body":{"injectables/UsersService.html":{}}}],["help",{"_index":1185,"title":{},"body":{"index.html":{}}}],["here",{"_index":1217,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":376,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(201",{"_index":373,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{}}}],["httpcode(204",{"_index":385,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["httpcode(204)@delete('me",{"_index":924,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://circleci.com/gh/nestjs/nest",{"_index":1098,"title":{},"body":{"index.html":{}}}],["https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456",{"_index":1096,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":1223,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["icon",{"_index":268,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{},"injectables/ExpenseCategoriesService.html":{},"classes/UpdateExpenseCategoryDto.html":{}}}],["id",{"_index":349,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id).catch",{"_index":774,"title":{},"body":{"injectables/GroupsService.html":{}}}],["identifier",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":983,"title":{},"body":{"injectables/UsersService.html":{}}}],["image",{"_index":1095,"title":{},"body":{"index.html":{}}}],["implement",{"_index":798,"title":{},"body":{"injectables/GroupsService.html":{}}}],["implements",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PrismaService.html":{},"guards/UserGuard.html":{}}}],["import",{"_index":19,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/UsersModule.html":{}}}],["in.dto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["in.dto.ts",{"_index":843,"title":{},"body":{"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"coverage.html":{}}}],["in.dto.ts:12",{"_index":847,"title":{},"body":{"classes/SignInEmailDto.html":{}}}],["in.dto.ts:19",{"_index":851,"title":{},"body":{"classes/SignInUsernameDto.html":{}}}],["in.dto.ts:24",{"_index":849,"title":{},"body":{"classes/SignInUsernameDto.html":{}}}],["in.dto.ts:7",{"_index":845,"title":{},"body":{"classes/SignInEmailDto.html":{}}}],["include",{"_index":551,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":1143,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1167,"title":{},"body":{"index.html":{}}}],["inject",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input.dto",{"_index":304,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["input.dto.ts",{"_index":839,"title":{},"body":{"classes/ShareInputDto.html":{},"coverage.html":{}}}],["input.dto.ts:6",{"_index":841,"title":{},"body":{"classes/ShareInputDto.html":{}}}],["input.dto.ts:9",{"_index":840,"title":{},"body":{"classes/ShareInputDto.html":{}}}],["insensitive",{"_index":991,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":1158,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1116,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":750,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["interact",{"_index":1188,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":732,"title":{},"body":{"injectables/GroupsService.html":{}}}],["internalservererrorexception('could",{"_index":755,"title":{},"body":{"injectables/GroupsService.html":{}}}],["invitation",{"_index":814,"title":{},"body":{"injectables/GroupsService.html":{}}}],["invite",{"_index":666,"title":{},"body":{"controllers/GroupsController.html":{}}}],["invitelink",{"_index":806,"title":{},"body":{"injectables/GroupsService.html":{}}}],["is_public_key",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":20,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{}}}],["isarray()@arraynotempty()@validatenested({each",{"_index":295,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["isarray()@isint({each",{"_index":875,"title":{},"body":{"classes/UpdateGroupDto.html":{}}}],["isarray()@type(undefined)@isint({each",{"_index":15,"title":{},"body":{"classes/AddUsersDto.html":{}}}],["iscurrentuser",{"_index":909,"title":{},"body":{"guards/UserGuard.html":{}}}],["isdate",{"_index":300,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["isemail",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@transform",{"_index":853,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isemail()@isnotempty()@transform(tolowercase",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isoptional",{"_index":881,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isemail()@transform",{"_index":844,"title":{},"body":{"classes/SignInEmailDto.html":{}}}],["isglobal",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":21,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseDto.html":{},"classes/ShareInputDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{}}}],["ismember",{"_index":554,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["ismember(userid",{"_index":724,"title":{},"body":{"injectables/GroupsService.html":{}}}],["isn't",{"_index":912,"title":{},"body":{"guards/UserGuard.html":{}}}],["isnotempty",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isstring()@minlength(8",{"_index":846,"title":{},"body":{"classes/SignInEmailDto.html":{}}}],["isnotempty()@isstring()@transform",{"_index":850,"title":{},"body":{"classes/SignInUsernameDto.html":{}}}],["isnumber",{"_index":283,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/ShareInputDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["isoptional",{"_index":299,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":872,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["isoptional()@isint",{"_index":285,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["isoptional()@isnumber",{"_index":865,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["isoptional()@isstring",{"_index":289,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["ispublic",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":269,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(2",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{}}}],["isstring()@isnotempty()@minlength(8",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{}}}],["isstring()@isnotempty()@transform",{"_index":858,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isstring()@isnotempty()@transform(tolowercase",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional",{"_index":861,"title":{},"body":{"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isoptional()@minlength(2",{"_index":883,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isstring()@isoptional()@minlength(8",{"_index":886,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(2",{"_index":308,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/UpdateGroupDto.html":{}}}],["isusermember",{"_index":795,"title":{},"body":{"injectables/GroupsService.html":{}}}],["job",{"_index":1202,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1204,"title":{},"body":{"index.html":{}}}],["join",{"_index":1215,"title":{},"body":{"index.html":{}}}],["joined",{"_index":811,"title":{},"body":{"injectables/GroupsService.html":{}}}],["joingroup",{"_index":629,"title":{},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["joingroup(@currentuser",{"_index":672,"title":{},"body":{"controllers/GroupsController.html":{}}}],["joingroup(user",{"_index":645,"title":{},"body":{"controllers/GroupsController.html":{}}}],["joingroup(userid",{"_index":726,"title":{},"body":{"injectables/GroupsService.html":{}}}],["js/faker",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"modules/GroupsModule.html":{}}}],["jwtmodule.registerasync",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GroupsService.html":{}}}],["kamil",{"_index":1220,"title":{},"body":{"index.html":{}}}],["key",{"_index":1134,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":1173,"title":{},"body":{"index.html":{}}}],["legend",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1226,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1207,"title":{},"body":{"index.html":{}}}],["link",{"_index":667,"title":{},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["linkedin",{"_index":1201,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["localhost:3000/groups/join/${token",{"_index":807,"title":{},"body":{"injectables/GroupsService.html":{}}}],["logic",{"_index":514,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["look",{"_index":560,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["looking",{"_index":1144,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1197,"title":{},"body":{"index.html":{}}}],["makes",{"_index":1152,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1166,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1148,"title":{},"body":{"index.html":{}}}],["member",{"_index":531,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["member.id",{"_index":556,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["memberid",{"_index":763,"title":{},"body":{"injectables/GroupsService.html":{}}}],["memberids",{"_index":711,"title":{},"body":{"injectables/GroupsService.html":{}}}],["memberids.filter((id",{"_index":786,"title":{},"body":{"injectables/GroupsService.html":{}}}],["memberids.length",{"_index":788,"title":{},"body":{"injectables/GroupsService.html":{}}}],["members",{"_index":10,"title":{},"body":{"classes/AddUsersDto.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"injectables/GroupsService.html":{},"classes/UpdateGroupDto.html":{}}}],["message",{"_index":776,"title":{},"body":{"injectables/GroupsService.html":{}}}],["metadata",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":310,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":311,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(8",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":1087,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1206,"title":{},"body":{"index.html":{}}}],["mode",{"_index":431,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["mode.type",{"_index":458,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["mode.type.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":796,"title":{},"body":{"injectables/GroupsService.html":{}}}],["more",{"_index":1142,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":780,"title":{},"body":{"injectables/GroupsService.html":{}}}],["myśliwiec",{"_index":1221,"title":{},"body":{"index.html":{}}}],["name",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":1193,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1108,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1225,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1132,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":1160,"title":{},"body":{"index.html":{}}}],["nestjs/passport",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":939,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"injectables/GroupsService.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.id",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.username",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":1100,"title":{},"body":{"index.html":{}}}],["note",{"_index":280,"title":{},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"classes/UpdateExpenseDto.html":{}}}],["notfoundexception",{"_index":409,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('creator",{"_index":754,"title":{},"body":{"injectables/GroupsService.html":{}}}],["notfoundexception('no",{"_index":789,"title":{},"body":{"injectables/GroupsService.html":{}}}],["notfoundexception(`expense",{"_index":553,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["notfoundexception(`expensecategory",{"_index":417,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{}}}],["notfoundexception(`group",{"_index":518,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{}}}],["notfoundexception(`user",{"_index":773,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["npm",{"_index":1115,"title":{},"body":{"index.html":{}}}],["null",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExpensesService.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":13,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["offer",{"_index":1203,"title":{},"body":{"index.html":{}}}],["official",{"_index":1149,"title":{},"body":{"index.html":{}}}],["onmoduledestroy",{"_index":823,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":824,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1208,"title":{},"body":{"index.html":{}}}],["optional",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1230,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":591,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["p2002",{"_index":1017,"title":{},"body":{"injectables/UsersService.html":{}}}],["p2025",{"_index":753,"title":{},"body":{"injectables/GroupsService.html":{}}}],["package",{"_index":1058,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":363,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["param('groupid",{"_index":473,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["param('id",{"_index":464,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{}}}],["param('token",{"_index":673,"title":{},"body":{"controllers/GroupsController.html":{}}}],["param('userid",{"_index":477,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseint(request.params.id",{"_index":916,"title":{},"body":{"guards/UserGuard.html":{}}}],["parseintpipe",{"_index":364,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{}}}],["part",{"_index":595,"title":{},"body":{"injectables/ExpensesService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["passport",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":365,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":381,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{}}}],["patch(':id')@httpcode(200",{"_index":360,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["patch(':id')@httpcode(204",{"_index":656,"title":{},"body":{"controllers/GroupsController.html":{}}}],["patch('me",{"_index":952,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('me')@httpcode(204",{"_index":934,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["payload.groupid",{"_index":809,"title":{},"body":{"injectables/GroupsService.html":{}}}],["payload.members",{"_index":684,"title":{},"body":{"controllers/GroupsController.html":{}}}],["payload.type",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["payload.type.ts",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["percentage",{"_index":597,"title":{},"body":{"injectables/ExpensesService.html":{},"miscellaneous/typealiases.html":{}}}],["permission",{"_index":917,"title":{},"body":{"guards/UserGuard.html":{}}}],["platform",{"_index":1147,"title":{},"body":{"index.html":{}}}],["please",{"_index":1176,"title":{},"body":{"index.html":{}}}],["possible",{"_index":1140,"title":{},"body":{"index.html":{}}}],["post",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["post(':id/members",{"_index":681,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post(':id/members')@httpcode(201",{"_index":633,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post(':id/members/:userid",{"_index":685,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post(':id/members/:userid')@httpcode(204",{"_index":636,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post('email/signin",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('join/:token",{"_index":671,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post('join/:token')@httpcode(200",{"_index":646,"title":{},"body":{"controllers/GroupsController.html":{}}}],["post('signup",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('username/signin",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@httpcode(201",{"_index":344,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"controllers/GroupsController.html":{}}}],["prefix",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":515,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.expenseupdateinput",{"_index":574,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["prisma.groupupdateinput",{"_index":757,"title":{},"body":{"injectables/GroupsService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":751,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":819,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/.../seed.ts",{"_index":1090,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":369,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{}}}],["prisma/prisma.service",{"_index":410,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{}}}],["prisma/seed.ts",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":822,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":401,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["process.env.jwt_secret",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GroupsService.html":{}}}],["production",{"_index":1122,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1099,"title":{},"body":{"index.html":{}}}],["project",{"_index":1112,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddUsersDto.html":{},"classes/AuthResponseDto.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["provided",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.created)@post('signup",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('email/signin",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('username/signin",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["query",{"_index":449,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["query('mode",{"_index":468,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["questions",{"_index":1174,"title":{},"body":{"index.html":{}}}],["read",{"_index":1216,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/ExpenseCategoriesController.html":{},"controllers/ExpensesController.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":1130,"title":{},"body":{"index.html":{}}}],["real",{"_index":1189,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{}}}],["related",{"_index":513,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["remove",{"_index":792,"title":{},"body":{"injectables/GroupsService.html":{}}}],["removed",{"_index":801,"title":{},"body":{"injectables/GroupsService.html":{}}}],["removeme",{"_index":630,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removeme(@currentuser",{"_index":692,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removeme(user",{"_index":648,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removesinglemember",{"_index":631,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removesinglemember(@currentuser",{"_index":689,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removesinglemember(user",{"_index":651,"title":{},"body":{"controllers/GroupsController.html":{}}}],["removeuser",{"_index":705,"title":{},"body":{"injectables/GroupsService.html":{}}}],["removeuser(currentmember",{"_index":728,"title":{},"body":{"injectables/GroupsService.html":{}}}],["repository",{"_index":1111,"title":{},"body":{"index.html":{}}}],["request",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["requiring",{"_index":1155,"title":{},"body":{"index.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetdb",{"_index":1028,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resource",{"_index":918,"title":{},"body":{"guards/UserGuard.html":{}}}],["resources",{"_index":1168,"title":{},"body":{"index.html":{}}}],["response.dto",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["response.dto.ts",{"_index":224,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/GetUserResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":226,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:3",{"_index":608,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:4",{"_index":605,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:5",{"_index":606,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:6",{"_index":604,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:7",{"_index":603,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["response.dto.ts:8",{"_index":607,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["results",{"_index":26,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"injectables/PrismaService.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":665,"title":{},"body":{"controllers/GroupsController.html":{}}}],["run",{"_index":1117,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1138,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["saltrounds",{"_index":1019,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":1104,"title":{},"body":{"index.html":{}}}],["secret",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/GroupsService.html":{}}}],["seed",{"_index":1030,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":736,"title":{},"body":{"injectables/GroupsService.html":{}}}],["server",{"_index":1105,"title":{},"body":{"index.html":{}}}],["set",{"_index":761,"title":{},"body":{"injectables/GroupsService.html":{}}}],["setmetadata(is_public_key",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1113,"title":{},"body":{"index.html":{}}}],["share",{"_index":303,"title":{"classes/Share.html":{}},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"classes/Share.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["share.amount",{"_index":524,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["share.expenseid",{"_index":563,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["share.userid",{"_index":523,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["shared/decorators/current",{"_index":941,"title":{},"body":{"controllers/UsersController.html":{}}}],["shareinputdto",{"_index":294,"title":{"classes/ShareInputDto.html":{}},"body":{"classes/CreateExpenseDto.html":{},"classes/ShareInputDto.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["shares",{"_index":281,"title":{},"body":{"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseDto.html":{}}}],["shares.length",{"_index":577,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["shares.map((share",{"_index":550,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["shares.reduce((acc",{"_index":535,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["shares.type.ts",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["side",{"_index":1106,"title":{},"body":{"index.html":{}}}],["signindto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinemail",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinemail(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinemail(data",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinemail(signindto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinemaildto",{"_index":99,"title":{"classes/SignInEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"coverage.html":{}}}],["signinusername",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinusername(@body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinusername(data",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinusername(signindto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinusernamedto",{"_index":107,"title":{"classes/SignInUsernameDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":111,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signupdto.username",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["simple",{"_index":1157,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"modules/GroupsModule.html":{},"injectables/GroupsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":462,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["splitwise",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["sponsors",{"_index":1211,"title":{},"body":{"index.html":{}}}],["src/.../conversion",{"_index":1240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../current",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../expense",{"_index":1241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transformers.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/public.decorator",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":1035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth",{"_index":223,"title":{},"body":{"classes/AuthResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/sign",{"_index":842,"title":{},"body":{"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/expense",{"_index":265,"title":{},"body":{"classes/CreateExpenseCategoryDto.html":{},"controllers/ExpenseCategoriesController.html":{},"modules/ExpenseCategoriesModule.html":{},"injectables/ExpenseCategoriesService.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseCategoryDto.html":{},"coverage.html":{}}}],["src/expenses/dto/create",{"_index":273,"title":{},"body":{"classes/CreateExpenseDto.html":{},"coverage.html":{}}}],["src/expenses/dto/share",{"_index":838,"title":{},"body":{"classes/ShareInputDto.html":{},"coverage.html":{}}}],["src/expenses/dto/update",{"_index":864,"title":{},"body":{"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["src/expenses/entity/share.entity.ts",{"_index":829,"title":{},"body":{"classes/Share.html":{},"coverage.html":{}}}],["src/expenses/entity/share.entity.ts:3",{"_index":833,"title":{},"body":{"classes/Share.html":{}}}],["src/expenses/entity/share.entity.ts:4",{"_index":834,"title":{},"body":{"classes/Share.html":{}}}],["src/expenses/entity/share.entity.ts:5",{"_index":832,"title":{},"body":{"classes/Share.html":{}}}],["src/expenses/entity/share.entity.ts:6",{"_index":831,"title":{},"body":{"classes/Share.html":{}}}],["src/expenses/expenses.controller.ts",{"_index":425,"title":{},"body":{"controllers/ExpensesController.html":{},"coverage.html":{}}}],["src/expenses/expenses.controller.ts:18",{"_index":439,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.controller.ts:25",{"_index":433,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.controller.ts:32",{"_index":442,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.controller.ts:39",{"_index":445,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.controller.ts:46",{"_index":448,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.controller.ts:58",{"_index":437,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["src/expenses/expenses.module.ts",{"_index":486,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["src/expenses/expenses.service.ts",{"_index":489,"title":{},"body":{"injectables/ExpensesService.html":{},"coverage.html":{}}}],["src/expenses/expenses.service.ts:103",{"_index":504,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:12",{"_index":492,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:120",{"_index":506,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:140",{"_index":508,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:19",{"_index":497,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:228",{"_index":500,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:250",{"_index":495,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/expenses/expenses.service.ts:83",{"_index":502,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/groups/dto/add",{"_index":6,"title":{},"body":{"classes/AddUsersDto.html":{},"coverage.html":{}}}],["src/groups/dto/create",{"_index":306,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["src/groups/dto/update",{"_index":874,"title":{},"body":{"classes/UpdateGroupDto.html":{},"coverage.html":{}}}],["src/groups/entity/group.entity.ts",{"_index":609,"title":{},"body":{"classes/Group.html":{},"coverage.html":{}}}],["src/groups/entity/group.entity.ts:2",{"_index":614,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/entity/group.entity.ts:3",{"_index":616,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/entity/group.entity.ts:4",{"_index":615,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/entity/group.entity.ts:5",{"_index":613,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/entity/group.entity.ts:6",{"_index":612,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/entity/group.entity.ts:7",{"_index":611,"title":{},"body":{"classes/Group.html":{}}}],["src/groups/groups.controller.ts",{"_index":624,"title":{},"body":{"controllers/GroupsController.html":{},"coverage.html":{}}}],["src/groups/groups.controller.ts:16",{"_index":644,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:23",{"_index":647,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:30",{"_index":639,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:37",{"_index":641,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:44",{"_index":657,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:51",{"_index":634,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:58",{"_index":637,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:65",{"_index":653,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.controller.ts:72",{"_index":650,"title":{},"body":{"controllers/GroupsController.html":{}}}],["src/groups/groups.module",{"_index":488,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["src/groups/groups.module.ts",{"_index":698,"title":{},"body":{"modules/GroupsModule.html":{}}}],["src/groups/groups.service",{"_index":510,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/groups/groups.service.ts",{"_index":700,"title":{},"body":{"injectables/GroupsService.html":{},"coverage.html":{}}}],["src/groups/groups.service.ts:109",{"_index":731,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:12",{"_index":706,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:145",{"_index":708,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:177",{"_index":712,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:20",{"_index":725,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:203",{"_index":729,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:233",{"_index":719,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:243",{"_index":723,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:265",{"_index":727,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:38",{"_index":714,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:47",{"_index":721,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/groups/groups.service.ts:82",{"_index":716,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/main.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/GroupsModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":818,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":733,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":820,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":826,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":825,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/shared/decorators/current",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/guards/auth.guard",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/shared/guards/auth.guard.ts",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/shared/guards/auth.guard.ts:11",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/guards/auth.guard.ts:19",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/guards/auth.guard.ts:53",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/utils/transformers",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/shared/utils/transformers.ts",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/conversion",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/expense",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/user",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/dto/create",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/get",{"_index":600,"title":{},"body":{"classes/GetUserResponseDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":879,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entity/user.entity",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/entity/user.entity.ts",{"_index":889,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entity/user.entity.ts:10",{"_index":890,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:3",{"_index":894,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:4",{"_index":897,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:5",{"_index":893,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:6",{"_index":895,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:7",{"_index":892,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:8",{"_index":896,"title":{},"body":{"classes/User.html":{}}}],["src/users/entity/user.entity.ts:9",{"_index":891,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.guard.ts",{"_index":904,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/users/user.guard.ts:12",{"_index":907,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/users/user.guard.ts:8",{"_index":906,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/users/users.controller.ts",{"_index":920,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:18",{"_index":928,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":932,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":925,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:42",{"_index":935,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"modules/GroupsModule.html":{}}}],["src/users/users.module.ts",{"_index":961,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GroupsService.html":{}}}],["src/users/users.service.ts",{"_index":963,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":970,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:112",{"_index":988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:147",{"_index":974,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":980,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:161",{"_index":986,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":978,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":976,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:61",{"_index":984,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:81",{"_index":982,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:97",{"_index":972,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1119,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1121,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1123,"title":{},"body":{"index.html":{}}}],["started",{"_index":1092,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1110,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":1196,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1135,"title":{},"body":{"index.html":{}}}],["still",{"_index":799,"title":{},"body":{"injectables/GroupsService.html":{}}}],["straightforward",{"_index":1153,"title":{},"body":{"index.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/AuthResponseDto.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":778,"title":{},"body":{"injectables/GroupsService.html":{}}}],["support",{"_index":1175,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1228,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":593,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["table",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1136,"title":{},"body":{"index.html":{}}}],["targetuserid",{"_index":915,"title":{},"body":{"guards/UserGuard.html":{}}}],["test",{"_index":1093,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1128,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1127,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1124,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1210,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":827,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":828,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.amount",{"_index":837,"title":{},"body":{"classes/Share.html":{}}}],["this.appservice.gethello",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assertisgroupmember(currentmember",{"_index":756,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.assertisgroupmember(userid",{"_index":804,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.authservice.signinemail(signindto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signinusername(signindto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.calculateshares(createexpensedto.amount",{"_index":520,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.calculateshares(expense.amount",{"_index":571,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.createdat",{"_index":621,"title":{},"body":{"classes/Group.html":{},"classes/User.html":{}}}],["this.email",{"_index":901,"title":{},"body":{"classes/User.html":{}}}],["this.expensecategoriesservice.createone(createexpensecategorydto",{"_index":375,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expensecategoriesservice.deleteone(id",{"_index":387,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expensecategoriesservice.getall",{"_index":377,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expensecategoriesservice.getbyid(createexpensedto.categoryid",{"_index":542,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.expensecategoriesservice.getbyid(id",{"_index":380,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expensecategoriesservice.getbyid(updateexpensedto.categoryid",{"_index":583,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.expensecategoriesservice.getbyname(name",{"_index":390,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expensecategoriesservice.updateone(id",{"_index":383,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["this.expenseid",{"_index":836,"title":{},"body":{"classes/Share.html":{}}}],["this.expenses",{"_index":620,"title":{},"body":{"classes/Group.html":{}}}],["this.expenseservice.createone(user.sub",{"_index":469,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.expenseservice.deleteone(user.sub",{"_index":482,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.expenseservice.getonebyid(user.sub",{"_index":465,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.expenseservice.getsomeofgroup(user.sub",{"_index":474,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.expenseservice.getsomeofuser(userid",{"_index":478,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.expenseservice.updateone(user.sub",{"_index":480,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["this.extracttokenfromheader(request",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.firstname",{"_index":899,"title":{},"body":{"classes/User.html":{}}}],["this.generatetoken(groupid",{"_index":805,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.groupservice.adduser(user.sub",{"_index":687,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.addusers(user.sub",{"_index":683,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.create(user.sub",{"_index":676,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.getbyid(user.sub",{"_index":678,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.getinvitelink(user.sub",{"_index":670,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.joingroup(user.sub",{"_index":674,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.removeuser(user.sub",{"_index":690,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupservice.update(user.sub",{"_index":680,"title":{},"body":{"controllers/GroupsController.html":{}}}],["this.groupsservice.getbyid(userid",{"_index":516,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.groupsservice.ismember(userid",{"_index":519,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.hashpassword(createuserdto.password",{"_index":1001,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashpassword(updateuserdto.password",{"_index":1010,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.id",{"_index":617,"title":{},"body":{"classes/Group.html":{},"classes/Share.html":{},"classes/User.html":{}}}],["this.ismember(userid",{"_index":737,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.jwtservice.sign(payload",{"_index":802,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":808,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.lastname",{"_index":900,"title":{},"body":{"classes/User.html":{}}}],["this.members",{"_index":619,"title":{},"body":{"classes/Group.html":{}}}],["this.name",{"_index":618,"title":{},"body":{"classes/Group.html":{}}}],["this.password",{"_index":902,"title":{},"body":{"classes/User.html":{}}}],["this.prismaclient.user.create",{"_index":1002,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaclient.user.delete",{"_index":1018,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaclient.user.findfirst",{"_index":989,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaclient.user.findmany",{"_index":999,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaclient.user.findunique",{"_index":996,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaclient.user.update",{"_index":1008,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.expense.create",{"_index":543,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.prismaservice.expense.delete",{"_index":592,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.prismaservice.expense.findmany",{"_index":559,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.prismaservice.expense.findunique",{"_index":552,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.prismaservice.expense.update",{"_index":589,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.prismaservice.expensecategory.create",{"_index":411,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.expensecategory.delete",{"_index":423,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.expensecategory.findfirst",{"_index":418,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.expensecategory.findmany",{"_index":414,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.expensecategory.findunique",{"_index":416,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.expensecategory.update",{"_index":420,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["this.prismaservice.group.create",{"_index":748,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.prismaservice.group.findunique",{"_index":735,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.prismaservice.group.update",{"_index":765,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.prismaservice.share.findmany",{"_index":562,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["this.reflector.get('iscurrentuser",{"_index":910,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.updatedat",{"_index":622,"title":{},"body":{"classes/Group.html":{},"classes/User.html":{}}}],["this.userid",{"_index":835,"title":{},"body":{"classes/Share.html":{}}}],["this.username",{"_index":898,"title":{},"body":{"classes/User.html":{}}}],["this.userservice.findonebyid(payload.sub",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userservice.getmany(memberids",{"_index":782,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.userservice.getone(userid).catch",{"_index":772,"title":{},"body":{"injectables/GroupsService.html":{}}}],["this.usersservice.create(signupdto",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.delete(user.sub",{"_index":951,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(signupdto.email",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyusername",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getone(number(id",{"_index":948,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getone(number(user.sub",{"_index":946,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(user.sub",{"_index":954,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ExpenseCategoriesService.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":1190,"title":{},"body":{"index.html":{}}}],["token",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{}}}],["tolowercase",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":539,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["totalparts",{"_index":596,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["totalshareamount",{"_index":534,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["touch",{"_index":1218,"title":{},"body":{"index.html":{}}}],["transform",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["transform(tolowercase",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["transformer",{"_index":23,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseDto.html":{},"dependencies.html":{}}}],["true",{"_index":16,"title":{},"body":{"classes/AddUsersDto.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/CreateExpenseDto.html":{},"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":296,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["try",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":1224,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/AddUsersDto.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(undefined)@isdate",{"_index":287,"title":{},"body":{"classes/CreateExpenseDto.html":{}}}],["type(undefined)@isoptional()@isdate",{"_index":867,"title":{},"body":{"classes/UpdateExpenseDto.html":{}}}],["typealiases",{"_index":1238,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/conversion",{"_index":457,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["types/user",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["typescript",{"_index":1109,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GroupsService.html":{}}}],["unauthorizedexception('invalid",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GroupsService.html":{}}}],["unauthorizedexception('no",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unauthorizedexception('user",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ExpensesService.html":{},"injectables/UsersService.html":{}}}],["unit",{"_index":1125,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":498,"title":{},"body":{"injectables/ExpensesService.html":{},"injectables/GroupsService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1237,"title":{},"body":{"properties.html":{}}}],["up.dto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":852,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:13",{"_index":857,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:18",{"_index":854,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:23",{"_index":855,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:28",{"_index":856,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:8",{"_index":859,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":479,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@body",{"_index":953,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@currentuser",{"_index":679,"title":{},"body":{"controllers/GroupsController.html":{}}}],["update(currentmember",{"_index":730,"title":{},"body":{"injectables/GroupsService.html":{}}}],["update(id",{"_index":987,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(updateuserdto",{"_index":933,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(user",{"_index":654,"title":{},"body":{"controllers/GroupsController.html":{}}}],["updatedat",{"_index":602,"title":{},"body":{"classes/GetUserResponseDto.html":{},"classes/Group.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["updatedexpense",{"_index":588,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatedgroup",{"_index":764,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updatedgroup.expenses.map((expense",{"_index":769,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updatedgroup.id",{"_index":766,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updatedgroup.members.map((member",{"_index":768,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updatedgroup.name",{"_index":767,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updateduser",{"_index":1007,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.email",{"_index":1015,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.firstname",{"_index":1013,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.lastname",{"_index":1014,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.password",{"_index":1016,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.username",{"_index":1012,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateexpensecategorydto",{"_index":359,"title":{"classes/UpdateExpenseCategoryDto.html":{}},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"classes/UpdateExpenseCategoryDto.html":{},"coverage.html":{}}}],["updateexpensecategorydto.icon",{"_index":422,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["updateexpensecategorydto.name",{"_index":421,"title":{},"body":{"injectables/ExpenseCategoriesService.html":{}}}],["updateexpensedto",{"_index":447,"title":{"classes/UpdateExpenseDto.html":{}},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/UpdateExpenseDto.html":{},"coverage.html":{}}}],["updateexpensedto.amount",{"_index":572,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.categoryid",{"_index":582,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.date",{"_index":580,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.description",{"_index":576,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.name",{"_index":575,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.note",{"_index":586,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.shares",{"_index":565,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.shares.length",{"_index":569,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.shares.some((share",{"_index":568,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updateexpensedto.shares?.length",{"_index":566,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updategroupdto",{"_index":655,"title":{"classes/UpdateGroupDto.html":{}},"body":{"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/UpdateGroupDto.html":{},"coverage.html":{}}}],["updategroupdto.members",{"_index":759,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updategroupdto.members.map((memberid",{"_index":762,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updategroupdto.name",{"_index":758,"title":{},"body":{"injectables/GroupsService.html":{}}}],["updateone",{"_index":342,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{}}}],["updateone(@param('id",{"_index":382,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{}}}],["updateone(id",{"_index":358,"title":{},"body":{"controllers/ExpenseCategoriesController.html":{},"injectables/ExpenseCategoriesService.html":{}}}],["updateone(user",{"_index":446,"title":{},"body":{"controllers/ExpensesController.html":{}}}],["updateone(userid",{"_index":507,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatepayload",{"_index":573,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatepayload.category",{"_index":584,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatepayload.date",{"_index":581,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatepayload.note",{"_index":587,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updatepayload.shares",{"_index":578,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["updates",{"_index":1198,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":878,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":1009,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":1097,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["used",{"_index":398,"title":{},"body":{"modules/ExpenseCategoriesModule.html":{},"guards/UserGuard.html":{}}}],["usefactory",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["user",{"_index":191,"title":{"classes/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/GetUserResponseDto.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/User.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user(updateduser.id",{"_index":1011,"title":{},"body":{"injectables/UsersService.html":{}}}],["user(user.id",{"_index":992,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.createdat",{"_index":997,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.decorator",{"_index":456,"title":{},"body":{"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":942,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:12",{"_index":885,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:15",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":887,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":888,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:25",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":882,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:30",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:7",{"_index":884,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":995,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.firstname",{"_index":993,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["user.lastname",{"_index":994,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.sub",{"_index":693,"title":{},"body":{"controllers/GroupsController.html":{},"guards/UserGuard.html":{}}}],["user.updatedat",{"_index":998,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.username",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userbyemail",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbyusername",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["userguard",{"_index":903,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":282,"title":{},"body":{"classes/CreateExpenseDto.html":{},"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"controllers/GroupsController.html":{},"injectables/GroupsService.html":{},"classes/Share.html":{},"classes/ShareInputDto.html":{}}}],["username",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userpayload",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ExpensesController.html":{},"controllers/GroupsController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":781,"title":{},"body":{"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":962,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":661,"title":{},"body":{"controllers/GroupsController.html":{}}}],["users.dto.ts",{"_index":7,"title":{},"body":{"classes/AddUsersDto.html":{},"coverage.html":{}}}],["users.dto.ts:9",{"_index":18,"title":{},"body":{"classes/AddUsersDto.html":{}}}],["users.map((user",{"_index":784,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":937,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{}}}],["userscontroller",{"_index":919,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GroupsService.html":{}}}],["usersmodule",{"_index":61,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":149,"title":{"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GroupsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@httpcode(200",{"_index":931,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":1191,"title":{},"body":{"index.html":{}}}],["valid",{"_index":790,"title":{},"body":{"injectables/GroupsService.html":{}}}],["validate",{"_index":567,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["validatenested",{"_index":301,"title":{},"body":{"classes/CreateExpenseDto.html":{},"classes/UpdateExpenseDto.html":{}}}],["validator",{"_index":22,"title":{},"body":{"classes/AddUsersDto.html":{},"classes/CreateExpenseCategoryDto.html":{},"classes/CreateExpenseDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateUserDto.html":{},"classes/ShareInputDto.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateExpenseCategoryDto.html":{},"classes/UpdateExpenseDto.html":{},"classes/UpdateGroupDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validmemberids",{"_index":785,"title":{},"body":{"injectables/GroupsService.html":{}}}],["validmemberids.map((memberid",{"_index":791,"title":{},"body":{"injectables/GroupsService.html":{}}}],["value",{"_index":435,"title":{},"body":{"controllers/ExpensesController.html":{},"injectables/ExpensesService.html":{},"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value?.tolowercase",{"_index":848,"title":{},"body":{"classes/SignInEmailDto.html":{},"classes/SignInUsernameDto.html":{},"classes/SignUpDto.html":{}}}],["variable",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1244,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1235,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1183,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1172,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1186,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1120,"title":{},"body":{"index.html":{}}}],["website",{"_index":1222,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["working",{"_index":1171,"title":{},"body":{"index.html":{}}}],["x",{"_index":1200,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1214,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1129,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":771,"title":{},"body":{"injectables/GroupsService.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExpenseCategoriesModule.html":{},"modules/ExpensesModule.html":{},"modules/GroupsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddUsersDto.html":{"url":"classes/AddUsersDto.html","title":"class - AddUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/dto/add-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                members\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsInt({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/groups/dto/add-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsInt } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class AddUsersDto\n{\n  @IsArray()\n  @Type(() => Number)\n  @IsInt({ each: true })\n  members: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController\n{\n  constructor(private readonly appService: AppService)\n  {}\n\n  @Get()\n  getHello(): string\n  {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nExpenseCategoriesModule\n\nExpenseCategoriesModule\n\nAppModule -->\n\nExpenseCategoriesModule->AppModule\n\n\n\n\n\nExpensesModule\n\nExpensesModule\n\nAppModule -->\n\nExpensesModule->AppModule\n\n\n\n\n\nGroupsModule\n\nGroupsModule\n\nAppModule -->\n\nGroupsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ExpenseCategoriesModule\n                        \n                        \n                            ExpensesModule\n                        \n                        \n                            GroupsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { GroupsModule } from './groups/groups.module';\nimport { ExpensesModule } from './expenses/expenses.module';\nimport { ExpenseCategoriesModule } from './expense-categories/expense-categories.module';\nimport authConfig from './config/auth.config';\n@Module({\n  imports: [\n    PrismaModule,\n    AuthModule,\n    UsersModule,\n    GroupsModule,\n    ExpensesModule,\n    ConfigModule.forRoot({\n      cache: true,\n      isGlobal: true,\n      load: [authConfig],\n    }),\n    ExpenseCategoriesModule,\n  ],\n  providers: [AppService],\n})\nexport class AppModule\n{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService\n{\n  getHello(): string\n  {\n    return 'Welcome to the Splitwise Clone API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                signInEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                signInUsername\n                            \n                            \n                                    \n                                    \n                                    \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signInEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInEmail(signInDto: SignInEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('email/signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signInUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInUsername(signInDto: SignInUsernameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('username/signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInUsernameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.CREATED)@Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, HttpCode, HttpStatus } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Public } from './decorators/public.decorator';\nimport { SignInEmailDto, SignInUsernameDto } from './dto/sign-in.dto';\nimport { SignUpDto } from './dto/sign-up.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('email/signin')\n  signInEmail(@Body() signInDto: SignInEmailDto) {\n    return this.authService.signInEmail(signInDto);\n  }\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('username/signin')\n  signInUsername(@Body() signInDto: SignInUsernameDto) {\n    return this.authService.signInUsername(signInDto);\n  }\n\n  @Public()\n  @HttpCode(HttpStatus.CREATED)\n  @Post('signup')\n  signUp(@Body() signUpDto: SignUpDto) {\n    return this.authService.signUp(signUpDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UsersService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/shared/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/auth.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/auth.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from 'src/auth/decorators/public.decorator';\nimport { UsersService } from 'src/users/users.service';\nimport { UserPayload } from '@app-types/user-payload.type';\n\n@Injectable()\nexport class AuthGuard implements CanActivate\n{\n  constructor(\n    private jwtService: JwtService,\n    private userService: UsersService,\n    private reflector: Reflector,\n  )\n  {}\n\n  async canActivate(context: ExecutionContext): Promise\n  {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [context.getHandler(), context.getClass()]);\n    if (isPublic)\n    {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token)\n    {\n      throw new UnauthorizedException('No token provided');\n    }\n    try\n    {\n      const payload: UserPayload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n\n      const user = await this.userService.findOneById(payload.sub);\n      if (!user)\n      {\n        throw new UnauthorizedException('User not found');\n      }\n      request['user'] = payload;\n    }\n    catch\n    {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined\n  {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthGuard } from 'src/shared/guards/auth.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  imports: [\n    PrismaModule,\n    UsersModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        global: true,\n        secret: configService.get('jwt.secret'),\n        signOptions: {\n          expiresIn: configService.get('jwt.expiresIn') || '1y',\n        },\n      }),\n    }),\n  ],\n})\nexport class AuthModule\n{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResponseDto.html":{"url":"classes/AuthResponseDto.html","title":"class - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthResponseDto {\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signInEmail\n                            \n                            \n                                    Async\n                                signInUsername\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInEmail(data: SignInEmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SignInEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInUsername(data: SignInUsernameDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SignInUsernameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(signupDto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { User } from 'src/users/entity/user.entity';\nimport { UsersService } from 'src/users/users.service';\nimport * as bcrypt from 'bcrypt';\nimport { SignInEmailDto, SignInUsernameDto } from './dto/sign-in.dto';\nimport { AuthResponseDto } from './dto/auth-response.dto';\n\n@Injectable()\nexport class AuthService\n{\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  )\n  {}\n\n  async signInUsername(data: SignInUsernameDto): Promise\n  {\n    const user: User | null = await this.usersService.findOneByUsername(\n      data.username,\n    );\n\n    if (!user || !(await bcrypt.compare(data.password, user.password)))\n    {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const payload = { username: data.username, sub: user.id };\n\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n\n  async signInEmail(data: SignInEmailDto): Promise\n  {\n    const user: User | null = await this.usersService.findOneByEmail(\n      data.email,\n    );\n\n    if (!user || !(await bcrypt.compare(data.password, user.password)))\n    {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const payload = { username: user.username, sub: user.id };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n\n  async signUp(signupDto: SignUpDto): Promise\n  {\n    const userByUsername = await this.usersService.findOneByUsername(\n      signupDto.username,\n    );\n    const userByEmail = await this.usersService.findOneByEmail(signupDto.email);\n\n    if (userByUsername)\n    {\n      throw new UnauthorizedException('User with this username already exists');\n    }\n    if (userByEmail)\n    {\n      throw new UnauthorizedException('User with this email already exists');\n    }\n\n    const newUser = await this.usersService.create(signupDto);\n\n    const payload = { username: newUser.username, sub: newUser.id };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExpenseCategoryDto.html":{"url":"classes/CreateExpenseCategoryDto.html","title":"class - CreateExpenseCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExpenseCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-categories/dto/create-expense-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-categories/dto/create-expense-category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-categories/dto/create-expense-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateExpenseCategoryDto\n{\n  @IsString()\n  name: string;\n  @IsString()\n  icon: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExpenseDto.html":{"url":"classes/CreateExpenseDto.html","title":"class - CreateExpenseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExpenseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/dto/create-expense.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                categoryId\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                groupId\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                shares\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShareInputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ArrayNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/create-expense.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsNumber, IsDate, IsInt, ValidateNested, ArrayNotEmpty, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ShareInputDto } from './share-input.dto';\n\nexport class CreateExpenseDto\n{\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsNumber()\n  amount: number;\n\n  @Type(() => Date)\n  @IsDate()\n  date: Date;\n\n  @IsOptional()\n  @IsString()\n  note?: string;\n\n  @IsOptional()\n  @IsInt()\n  categoryId?: number;\n\n  @IsInt()\n  groupId: number;\n\n  @IsInt()\n  userId: number;\n\n  @IsArray()\n  @ArrayNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => ShareInputDto)\n  shares: ShareInputDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupDto.html":{"url":"classes/CreateGroupDto.html","title":"class - CreateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/dto/create-group.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/groups/dto/create-group.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength } from 'class-validator';\n\nexport class CreateGroupDto {\n  @IsString()\n  @MinLength(2)\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@Transform(ToLowerCase)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Transform(ToLowerCase)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { ToLowerCase } from 'src/shared/utils/transformers';\n\nexport class CreateUserDto\n{\n  @IsString()\n  @IsNotEmpty()\n  @Transform(ToLowerCase)\n  username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @Transform(ToLowerCase)\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExpenseCategoriesController.html":{"url":"controllers/ExpenseCategoriesController.html","title":"controller - ExpenseCategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExpenseCategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-categories/expense-categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                expense-categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createOne\n                            \n                            \n                                    \n                                    \n                                deleteOne\n                            \n                            \n                                    \n                                    \n                                getAll\n                            \n                            \n                                    \n                                    \n                                getById\n                            \n                            \n                                    \n                                    \n                                getByName\n                            \n                            \n                                    \n                                    \n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(createExpenseCategoryDto: CreateExpenseCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExpenseCategoryDto\n                                            \n                                                            CreateExpenseCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('name/:name')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: number, updateExpenseCategoryDto: CreateExpenseCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateExpenseCategoryDto\n                                            \n                                                            CreateExpenseCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, ParseIntPipe, Patch, Post } from '@nestjs/common';\nimport { CreateExpenseCategoryDto } from './dto/create-expense-category.dto';\nimport { ExpenseCategory } from '@prisma/client';\nimport { ExpenseCategoriesService } from './expense-categories.service';\n\n@Controller('expense-categories')\nexport class ExpenseCategoriesController\n{\n  constructor(private readonly expenseCategoriesService: ExpenseCategoriesService)\n  {}\n\n  @Post()\n  @HttpCode(201)\n  createOne(@Body() createExpenseCategoryDto: CreateExpenseCategoryDto): Promise\n  {\n    return this.expenseCategoriesService.createOne(createExpenseCategoryDto);\n  }\n\n  @Get()\n  @HttpCode(200)\n  getAll(): Promise\n  {\n    return this.expenseCategoriesService.getAll();\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  getById(@Param('id', ParseIntPipe) id: number): Promise\n  {\n    return this.expenseCategoriesService.getById(id);\n  }\n\n  @Patch(':id')\n  @HttpCode(200)\n  updateOne(@Param('id', ParseIntPipe) id: number, @Body() updateExpenseCategoryDto: CreateExpenseCategoryDto): Promise\n  {\n    return this.expenseCategoriesService.updateOne(id, updateExpenseCategoryDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(204)\n  deleteOne(@Param('id', ParseIntPipe) id: number): Promise\n  {\n    return this.expenseCategoriesService.deleteOne(id);\n  }\n\n  @Get('name/:name')\n  @HttpCode(200)\n  getByName(@Param('name') name: string): Promise\n  {\n    return this.expenseCategoriesService.getByName(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpenseCategoriesModule.html":{"url":"modules/ExpenseCategoriesModule.html","title":"module - ExpenseCategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpenseCategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpenseCategoriesModule\n\n\n\ncluster_ExpenseCategoriesModule_imports\n\n\n\ncluster_ExpenseCategoriesModule_exports\n\n\n\ncluster_ExpenseCategoriesModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nExpenseCategoriesModule\n\nExpenseCategoriesModule\n\nExpenseCategoriesModule -->\n\nPrismaModule->ExpenseCategoriesModule\n\n\n\n\n\nExpenseCategoriesService \n\nExpenseCategoriesService \n\nExpenseCategoriesService  -->\n\nExpenseCategoriesModule->ExpenseCategoriesService \n\n\n\n\n\nExpenseCategoriesService\n\nExpenseCategoriesService\n\nExpenseCategoriesModule -->\n\nExpenseCategoriesService->ExpenseCategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expense-categories/expense-categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpenseCategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExpenseCategoriesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExpenseCategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExpenseCategoriesService } from './expense-categories.service';\nimport { ExpenseCategoriesController } from './expense-categories.controller';\nimport { PrismaModule } from '@prisma/prisma.module';\n\n@Module({\n  providers: [ExpenseCategoriesService],\n  controllers: [ExpenseCategoriesController],\n  imports: [PrismaModule],\n  exports: [ExpenseCategoriesService], // Exporting ExpenseCategoriesService to be used in other modules\n})\nexport class ExpenseCategoriesModule\n{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseCategoriesService.html":{"url":"injectables/ExpenseCategoriesService.html","title":"injectable - ExpenseCategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseCategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-categories/expense-categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByName\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/expense-categories/expense-categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(createExpenseCategoryDto: CreateExpenseCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createExpenseCategoryDto\n                                            \n                                                            CreateExpenseCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: number, updateExpenseCategoryDto: CreateExpenseCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expense-categories/expense-categories.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateExpenseCategoryDto\n                                            \n                                                            CreateExpenseCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateExpenseCategoryDto } from './dto/create-expense-category.dto';\nimport { PrismaService } from '@prisma/prisma.service';\nimport { ExpenseCategory } from '@prisma/client';\n\n@Injectable()\nexport class ExpenseCategoriesService\n{\n  constructor(private prismaService: PrismaService)\n  {}\n  async createOne(createExpenseCategoryDto: CreateExpenseCategoryDto): Promise\n  {\n    return await this.prismaService.expenseCategory.create({\n      data: {\n        name: createExpenseCategoryDto.name,\n        icon: createExpenseCategoryDto.icon,\n      },\n    });\n  }\n  async getAll(): Promise\n  {\n    return await this.prismaService.expenseCategory.findMany();\n  }\n  async getById(id: number): Promise\n  {\n    const category = await this.prismaService.expenseCategory.findUnique({\n      where: { id },\n    });\n    if (!category)\n    {\n      throw new NotFoundException(`ExpenseCategory with ID ${id} not found`);\n    }\n    return category;\n  }\n  async getByName(name: string): Promise\n  {\n    return await this.prismaService.expenseCategory.findFirst({\n      where: { name },\n    });\n  }\n  async updateOne(id: number, updateExpenseCategoryDto: CreateExpenseCategoryDto): Promise\n  {\n    const existingCategory = await this.prismaService.expenseCategory.findUnique({\n      where: { id },\n    });\n    if (!existingCategory)\n    {\n      throw new NotFoundException(`ExpenseCategory with ID ${id} not found`);\n    }\n\n    const category = await this.prismaService.expenseCategory.update({\n      where: { id },\n      data: {\n        name: updateExpenseCategoryDto.name,\n        icon: updateExpenseCategoryDto.icon,\n      },\n    });\n    return category;\n  }\n  async deleteOne(id: number): Promise\n  {\n    const existingCategory = await this.prismaService.expenseCategory.findUnique({\n      where: { id },\n    });\n    if (!existingCategory)\n    {\n      throw new NotFoundException(`ExpenseCategory with ID ${id} not found`);\n    }\n    await this.prismaService.expenseCategory.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExpensesController.html":{"url":"controllers/ExpensesController.html","title":"controller - ExpensesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExpensesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/expenses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                expenses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createOne\n                            \n                            \n                                    \n                                    Async\n                                deleteOne\n                            \n                            \n                                    \n                                    Async\n                                getOneById\n                            \n                            \n                                    \n                                    Async\n                                getSomeOfGroup\n                            \n                            \n                                    \n                                    Async\n                                getSomeOfUser\n                            \n                            \n                                    \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(user: UserPayload, createExpenseDto: CreateExpenseDto, mode: ConversionMode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                createExpenseDto\n                                            \n                                                            CreateExpenseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            ConversionMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'amount'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(user: UserPayload, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneById(user: UserPayload, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSomeOfGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSomeOfGroup(user: UserPayload, groupId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/group/:groupId')\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSomeOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSomeOfUser(user: UserPayload, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(user: UserPayload, id: number, updateExpenseDto: UpdateExpenseDto, mode: ConversionMode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/expenses/expenses.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updateExpenseDto\n                                            \n                                                            UpdateExpenseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            ConversionMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'amount'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Param, Body, ParseIntPipe, Query } from '@nestjs/common';\nimport { ExpensesService } from './expenses.service';\nimport { CreateExpenseDto } from './dto/create-expense.dto';\nimport { UpdateExpenseDto } from './dto/update-expense.dto';\nimport { Expense } from '@prisma/client';\nimport { CurrentUser } from '@decorators/current-user.decorator';\nimport { UserPayload } from '@app-types/user-payload.type';\nimport { ConversionMode } from '@app-types/conversion-mode.type';\n\n@Controller('expenses')\nexport class ExpensesController\n{\n  constructor(private readonly expenseService: ExpensesService)\n  {}\n\n  // GET /expense/:id : Get a specific expense by ID\n  @Get(':id')\n  async getOneById(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number): Promise\n  {\n    return this.expenseService.getOneById(user.sub, id);\n  }\n\n  // POST /expense : Create a new expense\n  @Post()\n  async createOne(@CurrentUser() user: UserPayload, @Body() createExpenseDto: CreateExpenseDto, @Query('mode') mode: ConversionMode = 'amount'): Promise\n  {\n    return this.expenseService.createOne(user.sub, createExpenseDto, mode);\n  }\n\n  // GET /expense/group/:groupId : Get all expenses for a group\n  @Get('/group/:groupId')\n  async getSomeOfGroup(@CurrentUser() user: UserPayload, @Param('groupId', ParseIntPipe) groupId: number): Promise\n  {\n    return this.expenseService.getSomeOfGroup(user.sub, groupId);\n  }\n\n  // GET /expense/user/:userId : Get all expenses for a user\n  @Get('/user/:userId')\n  async getSomeOfUser(@CurrentUser() user: UserPayload, @Param('userId', ParseIntPipe) userId: number): Promise\n  {\n    return this.expenseService.getSomeOfUser(userId);\n  }\n\n  // PATCH /expense/:id : Update an expense\n  @Patch(':id')\n  async updateOne(\n    @CurrentUser() user: UserPayload,\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateExpenseDto: UpdateExpenseDto,\n    @Query('mode') mode: ConversionMode = 'amount',\n  ): Promise\n  {\n    return this.expenseService.updateOne(user.sub, id, updateExpenseDto, mode);\n  }\n\n  // DELETE /expense/:id : Delete an expense\n  @Delete(':id')\n  async deleteOne(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number): Promise\n  {\n    return this.expenseService.deleteOne(user.sub, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpensesModule.html":{"url":"modules/ExpensesModule.html","title":"module - ExpensesModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpensesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpensesModule\n\n\n\ncluster_ExpensesModule_providers\n\n\n\ncluster_ExpensesModule_imports\n\n\n\n\nExpenseCategoriesModule\n\nExpenseCategoriesModule\n\n\n\nExpensesModule\n\nExpensesModule\n\nExpensesModule -->\n\nExpenseCategoriesModule->ExpensesModule\n\n\n\n\n\nGroupsModule\n\nGroupsModule\n\nExpensesModule -->\n\nGroupsModule->ExpensesModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nExpensesModule -->\n\nPrismaModule->ExpensesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nExpensesModule -->\n\nUsersModule->ExpensesModule\n\n\n\n\n\nExpensesService\n\nExpensesService\n\nExpensesModule -->\n\nExpensesService->ExpensesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/expenses/expenses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpensesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExpensesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExpenseCategoriesModule\n                        \n                        \n                            GroupsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExpensesController } from './expenses.controller';\nimport { ExpensesService } from './expenses.service';\nimport { PrismaModule } from '@prisma/prisma.module';\nimport { UsersModule } from '@users/users.module';\nimport { GroupsModule } from '@src/groups/groups.module';\nimport { ExpenseCategoriesModule } from '@src/expense-categories/expense-categories.module';\n\n@Module({\n  controllers: [ExpensesController],\n  providers: [ExpensesService],\n  imports: [PrismaModule, UsersModule, GroupsModule, ExpenseCategoriesModule],\n})\nexport class ExpensesModule\n{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpensesService.html":{"url":"injectables/ExpensesService.html","title":"injectable - ExpensesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpensesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/expenses.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateShares\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                getOneById\n                            \n                            \n                                    Async\n                                getSomeOfGroup\n                            \n                            \n                                    Async\n                                getSomeOfUser\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, groupsService: GroupsService, expenseCategoriesService: ExpenseCategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/expenses/expenses.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupsService\n                                                  \n                                                        \n                                                                        GroupsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseCategoriesService\n                                                  \n                                                        \n                                                                        ExpenseCategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateShares\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateShares(amount: number, shares: Array, mode: ConversionMode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:250\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shares\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                            ConversionMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Array\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(userId: number, createExpenseDto: CreateExpenseDto, mode: ConversionMode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createExpenseDto\n                                            \n                                                            CreateExpenseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                            ConversionMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(userId: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneById(userId: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSomeOfGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSomeOfGroup(userId: number, groupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSomeOfUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSomeOfUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(userId: number, id: number, updateExpenseDto: UpdateExpenseDto, mode: ConversionMode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/expenses/expenses.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updateExpenseDto\n                                            \n                                                            UpdateExpenseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mode\n                                            \n                                                            ConversionMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'amount'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '@prisma/prisma.service';\nimport { GroupsService } from '@src/groups/groups.service'; // Assuming you have a GroupsService to handle group-related logic\nimport { ExpenseCategory, Expense, Prisma } from '@prisma/client';\nimport { ConversionMode } from '@app-types/conversion-mode.type';\nimport { CreateExpenseDto } from './dto/create-expense.dto';\nimport { UpdateExpenseDto } from './dto/update-expense.dto';\nimport { ExpenseCategoriesService } from '@src/expense-categories/expense-categories.service';\n\n@Injectable()\nexport class ExpensesService\n{\n  constructor(\n    private prismaService: PrismaService,\n    private groupsService: GroupsService,\n    private expenseCategoriesService: ExpenseCategoriesService,\n  )\n  {}\n  async createOne(userId: number, createExpenseDto: CreateExpenseDto, mode: ConversionMode)\n  {\n    const group = await this.groupsService.getById(userId, createExpenseDto.groupId);\n    if (!group)\n    {\n      throw new NotFoundException(`Group with ID ${createExpenseDto.groupId} not found`);\n    }\n\n    await this.groupsService.isMember(userId, createExpenseDto.groupId);\n\n    const shares = this.calculateShares(createExpenseDto.amount, createExpenseDto.shares, mode);\n\n    if (createExpenseDto.shares.some((share) => !share.userId || !share.amount))\n    {\n      throw new ForbiddenException('Each share must have a userId and an amount');\n    }\n    if (createExpenseDto.shares.length > group.members.length)\n    {\n      throw new ForbiddenException('The number of shares cannot exceed the number of group members');\n    }\n    if (createExpenseDto.shares.some((share) => share.amount  !group.members.some((member) => member === share.userId)))\n    {\n      throw new ForbiddenException('All shares must belong to members of the group');\n    }\n\n    const totalShareAmount = shares.reduce((acc, share) => acc + share.amount, 0);\n    if (totalShareAmount !== createExpenseDto.amount)\n    {\n      throw new ForbiddenException('The total amount of shares must equal the expense amount');\n    }\n    let category: ExpenseCategory | null = null;\n    if (createExpenseDto.categoryId)\n    {\n      category = await this.expenseCategoriesService.getById(createExpenseDto.categoryId);\n    }\n\n    const expense = await this.prismaService.expense.create({\n      data: {\n        name: createExpenseDto.name,\n        description: createExpenseDto.description,\n        amount: createExpenseDto.amount,\n        groupId: createExpenseDto.groupId,\n        userId: createExpenseDto.userId,\n        date: createExpenseDto.date,\n        categoryId: category ? category.id : undefined,\n        note: createExpenseDto.note,\n        shares: {\n          create: shares.map((share) => ({\n            userId: share.userId,\n            amount: share.amount,\n          })),\n        },\n      },\n      include: {\n        group: true,\n        shares: true,\n      },\n    });\n    return expense;\n  }\n  async getOneById(userId: number, id: number): Promise\n  {\n    const expense = await this.prismaService.expense.findUnique({\n      where: { id },\n      include: { group: { include: { members: true } } },\n    });\n\n    if (!expense)\n    {\n      throw new NotFoundException(`Expense with ID ${id} not found`);\n    }\n\n    const isMember = expense.group.members.some((member) => member.id === userId);\n    if (!isMember)\n    {\n      throw new ForbiddenException('You are not a member of the group associated with this expense');\n    }\n\n    return expense;\n  }\n  async getSomeOfGroup(userId: number, groupId: number)\n  {\n    const group = await this.groupsService.getById(userId, groupId);\n    if (!group)\n    {\n      throw new NotFoundException(`Group with ID ${groupId} not found`);\n    }\n\n    await this.groupsService.isMember(userId, groupId);\n\n    const expenses = await this.prismaService.expense.findMany({\n      where: { groupId },\n      include: { shares: true },\n    });\n\n    return expenses;\n  }\n  async getSomeOfUser(userId: number): Promise\n  {\n    // look for all the user groups\n    const shares = await this.prismaService.share.findMany({\n      where: { userId },\n      include: { expense: true },\n    });\n\n    const expenses = await this.prismaService.expense.findMany({\n      where: { id: { in: shares.map((share) => share.expenseId) } },\n      include: { shares: true, group: true },\n    });\n\n    if (!expenses || expenses.length === 0)\n    {\n      return [];\n    }\n\n    return expenses;\n  }\n  async updateOne(userId: number, id: number, updateExpenseDto: UpdateExpenseDto, mode: ConversionMode = 'amount')\n  {\n    const expense = await this.prismaService.expense.findUnique({\n      where: { id },\n      include: { group: { include: { members: true } } },\n    });\n\n    if (!expense)\n    {\n      throw new NotFoundException(`Expense with ID ${id} not found`);\n    }\n\n    const isMember = expense.group.members.some((member) => member.id === userId);\n    if (!isMember)\n    {\n      throw new ForbiddenException('You are not a member of the group associated with this expense');\n    }\n    let shares: Array = [];\n    if (updateExpenseDto.shares && updateExpenseDto.shares?.length !== 0)\n    {\n      // Validate shares\n      if (updateExpenseDto.shares.some((share) => !share.userId || !share.amount))\n      {\n        throw new ForbiddenException('Each share must have a userId and an amount');\n      }\n      if (updateExpenseDto.shares.length > expense.group.members.length)\n      {\n        throw new ForbiddenException('The number of shares cannot exceed the number of group members');\n      }\n      if (updateExpenseDto.shares.some((share) => share.amount  !expense.group.members.some((member) => member.id === share.userId)))\n      {\n        throw new ForbiddenException('All shares must belong to members of the group');\n      }\n\n      shares = this.calculateShares(expense.amount, updateExpenseDto.shares, mode);\n      const totalShareAmount = shares.reduce((acc, share) => acc + share.amount, 0);\n      if (totalShareAmount !== updateExpenseDto.amount)\n      {\n        throw new ForbiddenException('The total amount of shares must equal the expense amount');\n      }\n    }\n\n    const updatePayload: Prisma.ExpenseUpdateInput = {\n      name: updateExpenseDto.name,\n      description: updateExpenseDto.description,\n      amount: updateExpenseDto.amount,\n    };\n    if (shares.length !== 0)\n    {\n      updatePayload.shares = {\n        deleteMany: {},\n        create: shares.map((share) => ({\n          userId: share.userId,\n          amount: share.amount,\n        })),\n      };\n    }\n    if (updateExpenseDto.date)\n    {\n      updatePayload.date = updateExpenseDto.date;\n    }\n    if (updateExpenseDto.categoryId)\n    {\n      const category = await this.expenseCategoriesService.getById(updateExpenseDto.categoryId);\n      if (!category)\n      {\n        throw new NotFoundException(`ExpenseCategory with ID ${updateExpenseDto.categoryId} not found`);\n      }\n      updatePayload.category = {\n        connect: { id: updateExpenseDto.categoryId },\n      };\n    }\n    if (updateExpenseDto.note)\n    {\n      updatePayload.note = updateExpenseDto.note;\n    }\n\n    const updatedExpense = await this.prismaService.expense.update({\n      where: { id },\n      data: updatePayload,\n      include: { shares: true },\n    });\n    return updatedExpense;\n  }\n  async deleteOne(userId: number, id: number)\n  {\n    const expense = await this.prismaService.expense.findUnique({\n      where: { id },\n      include: { group: { include: { members: true } } },\n    });\n\n    if (!expense)\n    {\n      throw new NotFoundException(`Expense with ID ${id} not found`);\n    }\n\n    if (userId !== expense.userId)\n    {\n      throw new ForbiddenException('You are not the owner of this expense');\n    }\n\n    await this.prismaService.expense.delete({\n      where: { id },\n    });\n  }\n\n  private calculateShares(amount: number, shares: Array, mode: ConversionMode): Array\n  {\n    switch (mode)\n    {\n      case 'part':\n      {\n        const totalParts = shares.reduce((acc: number, share: { userId: number; amount: number }) => acc + share.amount, 0);\n        return shares.map((share: { userId: number; amount: number }) => ({\n          userId: share.userId,\n          amount: (share.amount / totalParts) * amount,\n        }));\n      }\n      case 'percentage':\n      {\n        return shares.map((share: { userId: number; amount: number }) => ({\n          userId: share.userId,\n          amount: (share.amount / 100) * amount,\n        }));\n      }\n      case 'amount':\n      {\n        return shares.map((share: { userId: number; amount: number }) => ({\n          userId: share.userId,\n          amount: share.amount,\n        }));\n      }\n      default:\n        return shares;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserResponseDto.html":{"url":"classes/GetUserResponseDto.html","title":"class - GetUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/get-user-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/get-user-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserResponseDto {\n  id: number;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/entity/group.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                expenses\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, members: number[], expenses: number[])\n                    \n                \n                        \n                            \n                                Defined in src/groups/entity/group.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                    number[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenses\n                                                  \n                                                        \n                                                                    number[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/groups/entity/group.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Group {\n  id: number;\n  name: string;\n  members: number[];\n  expenses: number[];\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(id: number, name: string, members: number[], expenses: number[]) {\n    this.id = id;\n    this.name = name;\n    this.members = members;\n    this.expenses = expenses;\n    this.createdAt = new Date();\n    this.updatedAt = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GroupsController.html":{"url":"controllers/GroupsController.html","title":"controller - GroupsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GroupsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/groups.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                groups\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                addMultipleMembers\n                            \n                            \n                                    \n                                    \n                                addSingleMember\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getGroupById\n                            \n                            \n                                    \n                                    \n                                getInviteLink\n                            \n                            \n                                    \n                                    \n                                joinGroup\n                            \n                            \n                                    \n                                    \n                                removeMe\n                            \n                            \n                                    \n                                    \n                                removeSingleMember\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        addMultipleMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMultipleMembers(user: UserPayload, id: number, payload: AddUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/members')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            AddUsersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        addSingleMember\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSingleMember(user: UserPayload, id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/members/:userId')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: UserPayload, createGroupDto: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createGroupDto\n                                            \n                                                            CreateGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getGroupById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGroupById(user: UserPayload, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getInviteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInviteLink(user: UserPayload, groupId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/invite')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        joinGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGroup(user: UserPayload, token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('join/:token')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        removeMe\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMe(user: UserPayload, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/members/me')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        removeSingleMember\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeSingleMember(user: UserPayload, id: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/members/:userId')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: UserPayload, id: number, updateGroupDto: UpdateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/groups/groups.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateGroupDto\n                                            \n                                                            UpdateGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, Post, Param, Body, Patch, Delete, ParseIntPipe } from '@nestjs/common';\nimport { GroupsService } from './groups.service';\nimport { UpdateGroupDto } from './dto/update-group.dto';\nimport { CreateGroupDto } from './dto/create-group.dto';\nimport { CurrentUser } from '@decorators/current-user.decorator';\nimport { UserPayload } from '@app-types/user-payload.type';\nimport { AddUsersDto } from './dto/add-users.dto';\n@Controller('groups')\nexport class GroupsController\n{\n  constructor(private groupService: GroupsService)\n  {}\n  //Add a route that returns an invite link to the group\n  @Get(':id/invite')\n  @HttpCode(200)\n  getInviteLink(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) groupId: number)\n  {\n    return this.groupService.getInviteLink(user.sub, groupId);\n  }\n\n  @Post('join/:token')\n  @HttpCode(200)\n  joinGroup(@CurrentUser() user: UserPayload, @Param('token') token: string)\n  {\n    return this.groupService.joinGroup(user.sub, token);\n  }\n\n  @Post()\n  @HttpCode(201)\n  create(@CurrentUser() user: UserPayload, @Body() createGroupDto: CreateGroupDto)\n  {\n    return this.groupService.create(user.sub, createGroupDto);\n  }\n\n  @Get(':id')\n  @HttpCode(200)\n  getGroupById(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number)\n  {\n    return this.groupService.getById(user.sub, id);\n  }\n\n  @Patch(':id')\n  @HttpCode(204)\n  update(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number, @Body() updateGroupDto: UpdateGroupDto)\n  {\n    return this.groupService.update(user.sub, id, updateGroupDto);\n  }\n\n  @Post(':id/members')\n  @HttpCode(201)\n  addMultipleMembers(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number, @Body() payload: AddUsersDto)\n  {\n    return this.groupService.addUsers(user.sub, id, payload.members);\n  }\n\n  @Post(':id/members/:userId')\n  @HttpCode(204)\n  addSingleMember(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number, @Param('userId', ParseIntPipe) userId: number)\n  {\n    return this.groupService.addUser(user.sub, id, userId);\n  }\n\n  @Delete(':id/members/:userId')\n  @HttpCode(204)\n  removeSingleMember(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number, @Param('userId', ParseIntPipe) userId: number)\n  {\n    return this.groupService.removeUser(user.sub, id, userId);\n  }\n\n  @Delete(':id/members/me')\n  @HttpCode(204)\n  removeMe(@CurrentUser() user: UserPayload, @Param('id', ParseIntPipe) id: number)\n  {\n    return this.groupService.removeUser(user.sub, id, user.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupsModule.html":{"url":"modules/GroupsModule.html","title":"module - GroupsModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupsModule\n\n\n\ncluster_GroupsModule_exports\n\n\n\ncluster_GroupsModule_imports\n\n\n\ncluster_GroupsModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGroupsModule\n\nGroupsModule\n\nGroupsModule -->\n\nPrismaModule->GroupsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nGroupsModule -->\n\nUsersModule->GroupsModule\n\n\n\n\n\nGroupsService \n\nGroupsService \n\nGroupsService  -->\n\nGroupsModule->GroupsService \n\n\n\n\n\nGroupsService\n\nGroupsService\n\nGroupsModule -->\n\nGroupsService->GroupsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/groups/groups.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GroupsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GroupsService } from './groups.service';\nimport { GroupsController } from './groups.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  providers: [GroupsService],\n  controllers: [GroupsController],\n  imports: [PrismaModule, UsersModule, JwtModule],\n  exports: [GroupsService],\n})\nexport class GroupsModule\n{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupsService.html":{"url":"injectables/GroupsService.html","title":"injectable - GroupsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/groups.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                addUsers\n                            \n                            \n                                    Private\n                                    Async\n                                assertIsGroupMember\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getInviteLink\n                            \n                            \n                                    Async\n                                isMember\n                            \n                            \n                                    Async\n                                joinGroup\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, userService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/groups/groups.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(currentMember: number, id: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentMember\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUsers(currentMember: number, id: number, memberIds: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentMember\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                memberIds\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        assertIsGroupMember\n                        \n                    \n                \n            \n            \n                \n                        \n                    assertIsGroupMember(userId: number, groupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(creatorId: number, createGroupDto: CreateGroupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                creatorId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createGroupDto\n                                            \n                                                            CreateGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(groupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(userId: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getInviteLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInviteLink(userId: number, groupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isMember\n                        \n                    \n                \n            \n            \n                \n                        \n                    isMember(userId: number, groupId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                groupId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGroup(userId: number, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser(currentMember: number, id: number, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentMember\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(currentMember: number, id: number, updateGroupDto: UpdateGroupDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/groups/groups.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentMember\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateGroupDto\n                                            \n                                                            UpdateGroupDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, InternalServerErrorException, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Group } from './entity/group.entity';\nimport { CreateGroupDto } from './dto/create-group.dto';\nimport { UpdateGroupDto } from './dto/update-group.dto';\nimport { Prisma } from '@prisma/client';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class GroupsService\n{\n  constructor(\n    private prismaService: PrismaService,\n    private userService: UsersService,\n    private jwtService: JwtService,\n  )\n  {}\n\n  async isMember(userId: number, groupId: number): Promise\n  {\n    const group = await this.prismaService.group.findUnique({\n      where: { id: groupId },\n      include: {\n        members: {\n          select: { id: true },\n        },\n      },\n    });\n\n    if (!group)\n    {\n      throw new NotFoundException(`Group with ID ${groupId} not found`);\n    }\n\n    return group.members.some((member) => member.id === userId);\n  }\n  private async assertIsGroupMember(userId: number, groupId: number): Promise\n  {\n    const isMember = await this.isMember(userId, groupId);\n    if (!isMember)\n    {\n      throw new ForbiddenException('You are not a member of this group');\n    }\n  }\n  // GET /group/:id : Get group by id\n  async getById(userId: number, id: number): Promise\n  {\n    // check if the current user is a member of the group\n    // if not, throw an error\n\n    const group = await this.prismaService.group.findUnique({\n      where: { id },\n      include: {\n        members: {\n          select: { id: true },\n        },\n        expenses: {\n          select: { id: true },\n        },\n      },\n    });\n\n    if (!group)\n    {\n      throw new NotFoundException(`Group with ID ${id} not found`);\n    }\n\n    const isMember = group.members.some((member) => member.id === userId);\n    if (!isMember)\n    {\n      throw new ForbiddenException('You are not a member of this group');\n    }\n\n    const memberIds = group.members.map((member) => member.id);\n    const expenseIds = group.expenses.map((expense) => expense.id);\n\n    return new Group(group.id, group.name, memberIds, expenseIds);\n  }\n\n  // POST /group : Create group\n  async create(creatorId: number, createGroupDto: CreateGroupDto): Promise\n  {\n    try\n    {\n      const group = await this.prismaService.group.create({\n        data: {\n          name: createGroupDto.name,\n          members: {\n            connect: { id: creatorId },\n          },\n        },\n      });\n      return new Group(group.id, group.name, [creatorId], []);\n    }\n    catch (error)\n    {\n      if (error instanceof Prisma.PrismaClientKnownRequestError)\n      {\n        if (error.code === 'P2025')\n        {\n          throw new NotFoundException('Creator user not found');\n        }\n      }\n      throw new InternalServerErrorException('Could not create group');\n    }\n  }\n  // PATCH /group/:id : Update group\n  async update(currentMember: number, id: number, updateGroupDto: UpdateGroupDto): Promise\n  {\n    await this.assertIsGroupMember(currentMember, id);\n\n    const data: Prisma.GroupUpdateInput = {\n      name: updateGroupDto.name,\n    };\n\n    if (updateGroupDto.members)\n    {\n      data.members = {\n        set: updateGroupDto.members.map((memberId) => ({ id: memberId })),\n      };\n    }\n\n    const updatedGroup = await this.prismaService.group.update({\n      where: { id },\n      data,\n      include: {\n        members: {\n          select: { id: true },\n        },\n        expenses: {\n          select: { id: true },\n        },\n      },\n    });\n\n    return new Group(\n      updatedGroup.id,\n      updatedGroup.name,\n      updatedGroup.members.map((member) => member.id),\n      updatedGroup.expenses.map((expense) => expense.id),\n    );\n  }\n  // PATCH /group/:id/members/:userId : Add a user to a group\n  async addUser(currentMember: number, id: number, userId: number)\n  {\n    await this.assertIsGroupMember(currentMember, id);\n\n    if (userId === currentMember)\n    {\n      throw new ForbiddenException('You cannot add yourself to the group');\n    }\n\n    await this.userService.getOne(userId).catch(() =>\n    {\n      throw new NotFoundException(`User with ID ${userId} not found`);\n    });\n\n    await this.isMember(userId, id).catch(() =>\n    {\n      throw new ForbiddenException('User is already a member of this group');\n    });\n\n    await this.prismaService.group.update({\n      where: { id },\n      data: {\n        members: {\n          connect: { id: userId },\n        },\n      },\n    });\n    return {\n      message: `User ${userId} added to the group successfully`,\n    };\n  }\n  // POST /group/:id/members : Add multiple users to a group\n  async addUsers(currentMember: number, id: number, memberIds: number[])\n  {\n    await this.assertIsGroupMember(currentMember, id);\n\n    const users = await this.userService.getMany(memberIds);\n    const existingUserIds = users.map((user) => user.id);\n    const validMemberIds = memberIds.filter((id) => existingUserIds.includes(id));\n\n    if (memberIds.length === 0)\n    {\n      throw new NotFoundException('No valid users to add to the group');\n    }\n\n    await this.prismaService.group.update({\n      where: { id },\n      data: {\n        members: {\n          connect: validMemberIds.map((memberId) => ({ id: memberId })),\n        },\n      },\n    });\n    return {\n      message: `Users added to the group successfully`,\n    };\n  }\n  // DELETE /group/:id/members/:userId : Remove a user from a group\n  async removeUser(currentMember: number, id: number, userId: number)\n  {\n    await this.assertIsGroupMember(currentMember, id);\n\n    if (userId === currentMember)\n    {\n      throw new ForbiddenException(\"You can't remove yourself from the group\");\n    }\n\n    const isUserMember = await this.isMember(userId, id);\n    if (!isUserMember)\n    {\n      throw new NotFoundException(`User with ID ${userId} is not a member of this group`);\n    }\n    // NOTE : For the moment, we don't implement a check if the user still has expenses in the group\n\n    await this.prismaService.group.update({\n      where: { id },\n      data: {\n        members: {\n          disconnect: { id: userId },\n        },\n      },\n    });\n\n    return {\n      message: `User ${userId} removed from the group successfully`,\n    };\n  }\n\n  async generateToken(groupId: number): Promise\n  {\n    const payload = { groupId };\n    const token = this.jwtService.sign(payload, {\n      expiresIn: '1d',\n      secret: process.env.JWT_SECRET,\n    });\n    return token;\n  }\n\n  async getInviteLink(userId: number, groupId: number): Promise\n  {\n    await this.assertIsGroupMember(userId, groupId);\n    const group = await this.prismaService.group.findUnique({\n      where: { id: groupId },\n      include: {\n        members: {\n          select: { id: true },\n        },\n      },\n    });\n\n    if (!group)\n    {\n      throw new NotFoundException(`Group with ID ${groupId} not found`);\n    }\n\n    const token = await this.generateToken(groupId);\n    const inviteLink = `localhost:3000/groups/join/${token}`;\n    return inviteLink;\n  }\n\n  async joinGroup(userId: number, token: string)\n  {\n    try\n    {\n      const payload = this.jwtService.verify(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      const isMember = await this.isMember(userId, payload.groupId);\n      if (isMember)\n      {\n        console.log(`User ${userId} is already a member of group ${payload.groupId}`);\n        throw new ForbiddenException('You are already a member of this group');\n      }\n\n      const groupId = payload.groupId;\n      await this.prismaService.group.update({\n        where: { id: groupId },\n        data: {\n          members: {\n            connect: { id: userId },\n          },\n        },\n      });\n      return {\n        message: `You have successfully joined the group with ID ${groupId}`,\n      };\n    }\n    catch (e)\n    {\n      if (e instanceof ForbiddenException)\n      {\n        throw e;\n      }\n      throw new UnauthorizedException('Invalid or expired invitation link');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Share.html":{"url":"classes/Share.html","title":"class - Share","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Share\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/entity/share.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                expenseId\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, userId: number, expenseId: number, amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/expenses/entity/share.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/expenses/entity/share.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/expenses/entity/share.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/expenses/entity/share.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/expenses/entity/share.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Share\n{\n  id: number;\n  userId: number;\n  expenseId: number;\n  amount: number;\n\n  constructor(id: number, userId: number, expenseId: number, amount: number)\n  {\n    this.id = id;\n    this.userId = userId;\n    this.expenseId = expenseId;\n    this.amount = amount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShareInputDto.html":{"url":"classes/ShareInputDto.html","title":"class - ShareInputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShareInputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/dto/share-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/share-input.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/share-input.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsInt } from 'class-validator';\n\nexport class ShareInputDto\n{\n  @IsInt()\n  userId: number;\n\n  @IsNumber()\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInEmailDto.html":{"url":"classes/SignInEmailDto.html","title":"class - SignInEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class SignInEmailDto {\n  @IsEmail()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  password: string;\n}\n\nexport class SignInUsernameDto {\n  @IsNotEmpty()\n  @IsString()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInUsernameDto.html":{"url":"classes/SignInUsernameDto.html","title":"class - SignInUsernameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInUsernameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class SignInEmailDto {\n  @IsEmail()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  password: string;\n}\n\nexport class SignInUsernameDto {\n  @IsNotEmpty()\n  @IsString()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-up.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsString()\n  @IsNotEmpty()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @Transform(({ value }: { value: string }) => value?.toLowerCase())\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(2)\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExpenseCategoryDto.html":{"url":"classes/UpdateExpenseCategoryDto.html","title":"class - UpdateExpenseCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExpenseCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expense-categories/dto/update-expense-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-categories/dto/update-expense-category.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expense-categories/dto/update-expense-category.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateExpenseCategoryDto\n{\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsString()\n  @IsOptional()\n  icon: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExpenseDto.html":{"url":"classes/UpdateExpenseDto.html","title":"class - UpdateExpenseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExpenseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/expenses/dto/update-expense.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                categoryId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                shares\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@IsOptional()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        shares\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShareInputDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/expenses/dto/update-expense.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsNumber, IsDate, IsArray, ValidateNested, IsInt } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ShareInputDto } from './share-input.dto';\n\nexport class UpdateExpenseDto\n{\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  @IsNumber()\n  amount?: number;\n\n  @IsOptional()\n  @IsString()\n  note?: string;\n\n  @Type(() => Date)\n  @IsOptional()\n  @IsDate()\n  date?: Date;\n\n  @IsOptional()\n  @IsInt()\n  categoryId?: number;\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => ShareInputDto)\n  shares?: ShareInputDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupDto.html":{"url":"classes/UpdateGroupDto.html","title":"class - UpdateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/groups/dto/update-group.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                members\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsInt({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/groups/dto/update-group.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/groups/dto/update-group.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsArray, IsInt, MinLength } from 'class-validator';\n\nexport class UpdateGroupDto\n{\n  @IsString()\n  @MinLength(2)\n  name?: string;\n\n  @IsArray()\n  @IsInt({ each: true })\n  members?: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(2)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString, MinLength } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsString()\n  @IsOptional()\n  @MinLength(2)\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(2)\n  lastName?: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(8)\n  password?: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(2)\n  username?: string;\n\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  avatar?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entity/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, username: string, firstName: string, lastName: string, email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/users/entity/user.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User\n{\n  id: number;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  createdAt: Date;\n  updatedAt: Date;\n\n  constructor(\n    id: number,\n    username: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n  )\n  {\n    this.id = id;\n    this.username = username;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.password = password;\n    this.createdAt = new Date();\n    this.updatedAt = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/user.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, ForbiddenException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport { UserPayload } from '@app-types/user-payload.type';\n\n@Injectable()\nexport class UserGuard implements CanActivate\n{\n  constructor(private reflector: Reflector)\n  {}\n\n  canActivate(context: ExecutionContext): boolean\n  {\n    const isCurrentUser = this.reflector.get('isCurrentUser', context.getHandler());\n\n    if (!isCurrentUser)\n    {\n      return true; // If the decorator isn't used, allow access\n    }\n\n    const request: Request = context.switchToHttp().getRequest();\n    const user: UserPayload = request['user'] as UserPayload;\n    const targetUserId: number = parseInt(request.params.id);\n\n    if (!targetUserId)\n    {\n      throw new ForbiddenException('User ID not provided');\n    }\n    if (user.sub !== targetUserId)\n    {\n      throw new ForbiddenException('You do not have permission to access this resource');\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                getMe\n                            \n                            \n                                    \n                                    \n                                    \n                                getOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(user: UserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('me')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getMe\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMe(user: UserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: User})@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: UserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('me')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Patch } from '@nestjs/common';\nimport { User } from './entity/user.entity';\nimport { UsersService } from './users.service';\nimport { ApiOkResponse } from '@nestjs/swagger';\nimport { GetUserResponseDto } from './dto/get-user-response.dto';\nimport { CurrentUser } from '../shared/decorators/current-user.decorator';\nimport { UserPayload } from '@app-types/user-payload.type';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController\n{\n  constructor(private readonly usersService: UsersService)\n  {}\n\n  @Get('me')\n  @HttpCode(200)\n  getMe(@CurrentUser() user: UserPayload): Promise\n  {\n    return this.usersService.getOne(Number(user.sub));\n  }\n\n  @Get(':id')\n  @ApiOkResponse({\n    type: User,\n  })\n  @HttpCode(200)\n  getOne(@Param('id') id: string): Promise\n  {\n    return this.usersService.getOne(Number(id));\n  }\n\n  @HttpCode(204)\n  @Delete('me')\n  delete(@CurrentUser() user: UserPayload): Promise\n  {\n    return this.usersService.delete(user.sub);\n  }\n\n  @Patch('me')\n  @HttpCode(204)\n  update(@Body() updateUserDto: UpdateUserDto, @CurrentUser() user: UserPayload): Promise\n  {\n    return this.usersService.update(user.sub, updateUserDto);\n  }\n\n  // @Get('me/groups')\n\n  // find a user by username or email\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { UsersController } from './users.controller';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [UsersService],\n  exports: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                getMany\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Private\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaClient: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaClient\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMany(ids: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { User } from './entity/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Prisma } from '.prisma/client';\n\n@Injectable()\nexport class UsersService\n{\n  constructor(private prismaClient: PrismaService)\n  {}\n\n  async findOneByUsername(username: string): Promise\n  {\n    const user = await this.prismaClient.user.findFirst({\n      where: {\n        username: {\n          equals: username,\n          mode: 'insensitive',\n        },\n      },\n    });\n    if (!user)\n    {\n      return null;\n    }\n    return new User(user.id, user.username, user.firstName, user.lastName, user.email, user.password);\n  }\n\n  async findOneById(id: number): Promise\n  {\n    const user = await this.prismaClient.user.findUnique({\n      where: { id },\n    });\n    if (!user)\n    {\n      return null;\n    }\n    return new User(user.id, user.username, user.firstName, user.lastName, user.email, user.password);\n  }\n\n  async findOneByEmail(email: string): Promise\n  {\n    const user = await this.prismaClient.user.findFirst({\n      where: {\n        email: {\n          equals: email,\n          mode: 'insensitive',\n        },\n      },\n    });\n    if (!user)\n    {\n      return null;\n    }\n    return new User(user.id, user.username, user.firstName, user.lastName, user.email, user.password);\n  }\n\n  async getOne(id: number): Promise | null>\n  {\n    const user = await this.prismaClient.user.findUnique({\n      where: { id },\n    });\n    if (!user)\n    {\n      throw new NotFoundException(`User with id ${id} not found`);\n    }\n    return {\n      id: user.id,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n    };\n  }\n\n  async getMany(ids: number[]): Promise[]>\n  {\n    const users = await this.prismaClient.user.findMany({\n      where: { id: { in: ids } },\n    });\n    return users.map((user) => ({\n      id: user.id,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n    }));\n  }\n\n  async create(createUserDto: CreateUserDto): Promise\n  {\n    const hashedPassword = await this.hashPassword(createUserDto.password);\n    const user = await this.prismaClient.user.create({\n      data: {\n        username: createUserDto.username,\n        firstName: createUserDto.firstName,\n        lastName: createUserDto.lastName,\n        email: createUserDto.email,\n        password: hashedPassword,\n      },\n    });\n    return new User(user.id, user.username, user.firstName, user.lastName, user.email, user.password);\n  }\n\n  async update(id: number, updateUserDto: UpdateUserDto): Promise\n  {\n    try\n    {\n      const user = await this.prismaClient.user.findUnique({\n        where: { id },\n      });\n      if (!user)\n      {\n        throw new NotFoundException(`User with id ${id} not found`);\n      }\n\n      const updatedUser = await this.prismaClient.user.update({\n        where: { id },\n        data: {\n          ...updateUserDto,\n          password: updateUserDto.password ? await this.hashPassword(updateUserDto.password) : undefined,\n        },\n      });\n\n      return new User(updatedUser.id, updatedUser.username, updatedUser.firstName, updatedUser.lastName, updatedUser.email, updatedUser.password);\n    }\n    catch (error)\n    {\n      if (error instanceof Prisma.PrismaClientKnownRequestError)\n      {\n        if (error.code === 'P2002')\n        {\n          throw new NotFoundException(`User with this username or email already exists`);\n        }\n      }\n      throw error;\n    }\n  }\n\n  async delete(id: number): Promise\n  {\n    const user = await this.prismaClient.user.findUnique({\n      where: { id },\n    });\n    if (!user)\n    {\n      throw new NotFoundException(`User with id ${id} not found`);\n    }\n    await this.prismaClient.user.delete({\n      where: { id },\n    });\n  }\n\n  private async hashPassword(password: string): Promise\n  {\n    const saltRounds = 10;\n    return bcrypt.hash(password, saltRounds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        prisma/seed.ts\n            \n            function\n            resetDb\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        prisma/seed.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-response.dto.ts\n            \n            class\n            AuthResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInUsernameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/expense-categories/dto/create-expense-category.dto.ts\n            \n            class\n            CreateExpenseCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/expense-categories/dto/update-expense-category.dto.ts\n            \n            class\n            UpdateExpenseCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/expense-categories/expense-categories.controller.ts\n            \n            controller\n            ExpenseCategoriesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/expense-categories/expense-categories.service.ts\n            \n            injectable\n            ExpenseCategoriesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/expenses/dto/create-expense.dto.ts\n            \n            class\n            CreateExpenseDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/expenses/dto/share-input.dto.ts\n            \n            class\n            ShareInputDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/expenses/dto/update-expense.dto.ts\n            \n            class\n            UpdateExpenseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/expenses/entity/share.entity.ts\n            \n            class\n            Share\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/expenses/expenses.controller.ts\n            \n            controller\n            ExpensesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/expenses/expenses.service.ts\n            \n            injectable\n            ExpensesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/groups/dto/add-users.dto.ts\n            \n            class\n            AddUsersDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/groups/dto/create-group.dto.ts\n            \n            class\n            CreateGroupDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/groups/dto/update-group.dto.ts\n            \n            class\n            UpdateGroupDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/groups/entity/group.entity.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/groups/groups.controller.ts\n            \n            controller\n            GroupsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/groups/groups.service.ts\n            \n            injectable\n            GroupsService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/shared/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/shared/utils/transformers.ts\n            \n            variable\n            ToLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/types/conversion-mode.type.ts\n            \n            type alias\n            ConversionMode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/types/expense-shares.type.ts\n            \n            type alias\n            ExpenseShares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/types/user-payload.type.ts\n            \n            type alias\n            UserPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/get-user-response.dto.ts\n            \n            class\n            GetUserResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @faker-js/faker : ^9.8.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.5\n        \n            @prisma/client : ^6.6.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            resetDb   (prisma/.../seed.ts)\n                        \n                        \n                            seed   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resetDb\n                        \n                    \n                \n            \n            \n                \nresetDb()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seed\n                        \n                    \n                \n            \n            \n                \nseed()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\ntest\n[circleci-image]: https://img.shields.io/circleci/build/github/nestjs/nest/master?token=abc123def456\n[circleci-url]: https://circleci.com/gh/nestjs/nest\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpenseCategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpensesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ExpenseCategoriesModule\n\n\n\ncluster_ExpenseCategoriesModule_exports\n\n\n\ncluster_ExpenseCategoriesModule_providers\n\n\n\ncluster_ExpensesModule\n\n\n\ncluster_ExpensesModule_providers\n\n\n\ncluster_GroupsModule\n\n\n\ncluster_GroupsModule_exports\n\n\n\ncluster_GroupsModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nExpenseCategoriesModule\n\nExpenseCategoriesModule\n\n\n\nExpensesModule\n\nExpensesModule\n\nExpensesModule -->\n\nExpenseCategoriesModule->ExpensesModule\n\n\n\nAppModule -->\n\nExpenseCategoriesModule->AppModule\n\n\n\n\n\nExpenseCategoriesService \n\nExpenseCategoriesService \n\nExpenseCategoriesService  -->\n\nExpenseCategoriesModule->ExpenseCategoriesService \n\n\n\nAppModule -->\n\nExpensesModule->AppModule\n\n\n\n\n\nGroupsModule\n\nGroupsModule\n\nExpensesModule -->\n\nGroupsModule->ExpensesModule\n\n\n\nAppModule -->\n\nGroupsModule->AppModule\n\n\n\n\n\nGroupsService \n\nGroupsService \n\nGroupsService  -->\n\nGroupsModule->GroupsService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nExpenseCategoriesModule -->\n\nPrismaModule->ExpenseCategoriesModule\n\n\n\nExpensesModule -->\n\nPrismaModule->ExpensesModule\n\n\n\nGroupsModule -->\n\nPrismaModule->GroupsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nExpensesModule -->\n\nUsersModule->ExpensesModule\n\n\n\nGroupsModule -->\n\nUsersModule->GroupsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nExpenseCategoriesService\n\nExpenseCategoriesService\n\nExpenseCategoriesModule -->\n\nExpenseCategoriesService->ExpenseCategoriesModule\n\n\n\n\n\nExpensesService\n\nExpensesService\n\nExpensesModule -->\n\nExpensesService->ExpensesModule\n\n\n\n\n\nGroupsService\n\nGroupsService\n\nGroupsModule -->\n\nGroupsService->GroupsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConversionMode   (src/.../conversion-mode.type.ts)\n                        \n                        \n                            ExpenseShares   (src/.../expense-shares.type.ts)\n                        \n                        \n                            UserPayload   (src/.../user-payload.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/conversion-mode.type.ts\n    \n    \n        \n            \n                \n                    \n                    ConversionMode\n                \n            \n            \n                \n                        \"amount\" | \"percentage\" | \"part\"\n\n                \n            \n        \n    \n    src/types/expense-shares.type.ts\n    \n    \n        \n            \n                \n                    \n                    ExpenseShares\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/user-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ToLowerCase   (src/.../transformers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): UserPayload =>\n{\n  const request: Request = ctx.switchToHttp().getRequest();\n  return request['user'] as UserPayload;\n})\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/shared/utils/transformers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ToLowerCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  Transform(({ value }: { value: string }) =>\n    typeof value === 'string' ? value.toLowerCase() : value,\n  )\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
